<?xml version="1.0" encoding="UTF-8"?>
<project version="4">
  <component name="AnalysisUIOptions">
    <option name="ANALYZE_INJECTED_CODE" value="false" />
  </component>
  <component name="AutoImportSettings">
    <option name="autoReloadType" value="SELECTIVE" />
  </component>
  <component name="ChangeListManager">
    <list default="true" id="091cd905-c547-4179-9fb8-5e9879cce285" name="Changes" comment="Remove `FieldCountCheck` rule from `checkstyle.xml`.">
      <change beforePath="$PROJECT_DIR$/.idea/workspace.xml" beforeDir="false" afterPath="$PROJECT_DIR$/.idea/workspace.xml" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/build.bat" beforeDir="false" afterPath="$PROJECT_DIR$/build.bat" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/checkstyle-maven.bat" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/pom.xml" beforeDir="false" afterPath="$PROJECT_DIR$/pom.xml" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/src/main/java/magma/CompileException.java" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/src/main/java/magma/Compiler.java" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/src/main/java/magma/LetStatement.java" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/src/main/java/magma/TestMain.java" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/src/test/java/magma/ArrayTypeTest.java" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/src/test/java/magma/BooleanTypeTest.java" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/src/test/java/magma/CompilerTest.java" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/src/test/java/magma/SignedIntegerTypeTest.java" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/src/test/java/magma/TestUtils.java" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/src/test/java/magma/UnsignedIntegerTypeTest.java" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/test.bat" beforeDir="false" afterPath="$PROJECT_DIR$/test.bat" afterDir="false" />
    </list>
    <option name="SHOW_DIALOG" value="false" />
    <option name="HIGHLIGHT_CONFLICTS" value="true" />
    <option name="HIGHLIGHT_NON_ACTIVE_CHANGELIST" value="false" />
    <option name="LAST_RESOLUTION" value="IGNORE" />
  </component>
  <component name="FileTemplateManagerImpl">
    <option name="RECENT_TEMPLATES">
      <list>
        <option value="Interface" />
        <option value="Record" />
        <option value="JUnit5 Test Class" />
        <option value="Class" />
      </list>
    </option>
  </component>
  <component name="Git.Settings">
    <option name="PUSH_AUTO_UPDATE" value="true" />
    <option name="RECENT_GIT_ROOT_PATH" value="$PROJECT_DIR$" />
  </component>
  <component name="GitHubPullRequestSearchHistory">{
  &quot;lastFilter&quot;: {
    &quot;state&quot;: &quot;OPEN&quot;,
    &quot;assignee&quot;: &quot;SirMathhman&quot;
  }
}</component>
  <component name="GithubProjectSettings">
    <option name="branchProtectionPatterns">
      <list>
        <option value="master" />
      </list>
    </option>
  </component>
  <component name="GithubPullRequestsUISettings">{
  &quot;selectedUrlAndAccountId&quot;: {
    &quot;url&quot;: &quot;https://github.com/SirMathhman/Magma.git&quot;,
    &quot;accountId&quot;: &quot;5ccce926-293e-4330-b2a7-270ea3228439&quot;
  }
}</component>
  <component name="ProblemsViewState">
    <option name="selectedTabId" value="CurrentFile" />
  </component>
  <component name="ProjectColorInfo">{
  &quot;associatedIndex&quot;: 3
}</component>
  <component name="ProjectId" id="304EoLp6ZWsUcvlOP9yXLjMrk5A" />
  <component name="ProjectLevelVcsManager">
    <OptionsSetting value="false" id="Update" />
    <ConfirmationsSetting value="2" id="Add" />
  </component>
  <component name="ProjectViewState">
    <option name="hideEmptyMiddlePackages" value="true" />
    <option name="showLibraryContents" value="true" />
  </component>
  <component name="PropertiesComponent"><![CDATA[{
  "keyToString": {
    "Application.HelloWorld.executor": "Run",
    "Application.Main.executor": "Run",
    "Application.MainV2.executor": "Run",
    "Batch.build-maven.executor": "Run",
    "Batch.build.executor": "Run",
    "Batch.checkstyle-maven.executor": "Run",
    "Batch.test.executor": "Run",
    "Downloaded.Files.Path.Enabled": "false",
    "JUnit.All in Magma.executor": "Run",
    "JUnit.All in magma-compiler.executor": "Run",
    "JUnit.ApplicationTest.executor": "Run",
    "JUnit.CompilerTest (1).executor": "Run",
    "JUnit.CompilerTest.executor": "Run",
    "JUnit.MapNodeImmutabilityTest.testMergeReturnsNewInstance.executor": "Debug",
    "JUnit.java in magma-compiler.executor": "Run",
    "ModuleVcsDetector.initialDetectionPerformed": "true",
    "Python tests.Python tests for test_basic.test_compile_non_empty_returns_placeholder.executor": "Run",
    "Python tests.Python tests for test_compiler.test_compile_empty_input_creates_empty_main.executor": "Run",
    "Python tests.Python tests for test_compiler.test_compile_inner_function_with_inferred_declaration.executor": "Run",
    "Python tests.Python tests for test_misc.test_compile_class_fn_param_function_type.executor": "Run",
    "Python tests.Python tests in test_basic.py.executor": "Run",
    "Python tests.Python tests in test_compiler.py.executor": "Run",
    "Python tests.Python tests in test_flow.py.executor": "Run",
    "Python tests.Python tests in test_imports.py.executor": "Run",
    "Python tests.Python tests in test_misc.py.executor": "Run",
    "Python tests.Python tests in tests.executor": "Run",
    "Python tests.pytest for test_basic.test_compile_non_empty_returns_placeholder.executor": "Run",
    "Python.__init__.executor": "Run",
    "Python.utils.executor": "Run",
    "Repository.Attach.Annotations": "false",
    "Repository.Attach.JavaDocs": "false",
    "Repository.Attach.Sources": "false",
    "RunOnceActivity.ShowReadmeOnStart": "true",
    "RunOnceActivity.git.unshallow": "true",
    "com.intellij.testIntegration.createTest.CreateTestDialog.defaultLibrary": "JUnit5",
    "com.intellij.testIntegration.createTest.CreateTestDialog.defaultLibrarySuperClass.JUnit5": "",
    "git-widget-placeholder": "master",
    "introduce.parameter.lambda": "true",
    "junie.onboarding.icon.badge.shown": "true",
    "kotlin-language-version-configured": "true",
    "last_directory_selection": "C:/Users/mathm/IdeaProjects/Magma/src/test/java/magma",
    "last_opened_file_path": "C:/Users/mathm/IdeaProjects/Magma",
    "onboarding.tips.debug.path": "C:/Users/mathm/IdeaProjects/Magma/src/Main.java",
    "project.structure.last.edited": "Project",
    "project.structure.proportion": "0.15044248",
    "project.structure.side.proportion": "0.2",
    "run.code.analysis.last.selected.profile": "pProject Default",
    "settings.editor.selected.configurable": "Errors",
    "to.speed.mode.migration.done": "true"
  }
}]]></component>
  <component name="RecentsManager">
    <key name="CreateClassDialog.RecentsKey">
      <recent name="magma" />
      <recent name="magma.error" />
      <recent name="magma.rule" />
      <recent name="magma.node" />
    </key>
    <key name="MoveFile.RECENT_KEYS">
      <recent name="C:\Users\mathm\IdeaProjects\Magma\src\java" />
      <recent name="C:\Users\mathm\IdeaProjects\Magma\.venv" />
    </key>
    <key name="MoveMembersDialog.RECENTS_KEY">
      <recent name="magma.TestUtils" />
      <recent name="magma.Placeholder" />
      <recent name="magma.Main.Lists" />
      <recent name="magma.Application" />
      <recent name="magma.ApplicationTest" />
    </key>
    <key name="CreateTestDialog.Recents.Supers">
      <recent name="" />
    </key>
    <key name="ExtractSuperBase.RECENT_KEYS">
      <recent name="magma.node" />
      <recent name="magma" />
      <recent name="magma.divide" />
    </key>
    <key name="MoveClassesOrPackagesDialog.RECENTS_KEY">
      <recent name="magma" />
      <recent name="magma.node" />
      <recent name="magma.result" />
      <recent name="magma.option" />
      <recent name="magma.rule.divide" />
    </key>
    <key name="MoveInnerDialog.RECENTS_KEY">
      <recent name="magma" />
      <recent name="com.magma" />
      <recent name="" />
      <recent name="magma.node" />
    </key>
    <key name="CreateTestDialog.RecentsKey">
      <recent name="magma" />
    </key>
    <key name="CopyClassDialog.RECENTS_KEY">
      <recent name="magma" />
    </key>
  </component>
  <component name="RunManager" selected="JUnit.CompilerTest">
    <configuration name="build-maven" type="BatchConfigurationType" factoryName="Batch" temporary="true">
      <module name="magma-compiler" />
      <option name="INTERPRETER_OPTIONS" value="" />
      <option name="WORKING_DIRECTORY" value="$PROJECT_DIR$" />
      <option name="PARENT_ENVS" value="true" />
      <option name="SCRIPT_NAME" value="build-maven.bat" />
      <option name="PARAMETERS" value="" />
      <method v="2">
        <option name="Make" enabled="true" />
      </method>
    </configuration>
    <configuration name="build" type="BatchConfigurationType" factoryName="Batch" temporary="true">
      <module name="magma-compiler" />
      <option name="INTERPRETER_OPTIONS" value="" />
      <option name="WORKING_DIRECTORY" value="C:\Users\mathm\IdeaProjects\Magma" />
      <option name="PARENT_ENVS" value="true" />
      <option name="SCRIPT_NAME" value="build.bat" />
      <option name="PARAMETERS" value="" />
      <method v="2">
        <option name="Make" enabled="true" />
      </method>
    </configuration>
    <configuration name="test" type="BatchConfigurationType" factoryName="Batch" temporary="true">
      <module name="Magma" />
      <option name="INTERPRETER_OPTIONS" value="" />
      <option name="WORKING_DIRECTORY" value="$PROJECT_DIR$" />
      <option name="PARENT_ENVS" value="true" />
      <option name="SCRIPT_NAME" value="test.bat" />
      <option name="PARAMETERS" value="" />
      <method v="2">
        <option name="Make" enabled="true" />
      </method>
    </configuration>
    <configuration name="All in magma-compiler" type="JUnit" factoryName="JUnit" temporary="true" nameIsGenerated="true">
      <module name="magma-compiler" />
      <option name="PACKAGE_NAME" value="" />
      <option name="TEST_OBJECT" value="package" />
      <method v="2">
        <option name="Make" enabled="true" />
      </method>
    </configuration>
    <configuration name="CompilerTest" type="JUnit" factoryName="JUnit" temporary="true" nameIsGenerated="true">
      <module name="magma-compiler" />
      <extension name="coverage">
        <pattern>
          <option name="PATTERN" value="magma.*" />
          <option name="ENABLED" value="true" />
        </pattern>
      </extension>
      <option name="PACKAGE_NAME" value="magma" />
      <option name="MAIN_CLASS_NAME" value="magma.CompilerTest" />
      <option name="TEST_OBJECT" value="class" />
      <method v="2">
        <option name="Make" enabled="true" />
      </method>
    </configuration>
    <recent_temporary>
      <list>
        <item itemvalue="JUnit.CompilerTest" />
        <item itemvalue="JUnit.All in magma-compiler" />
        <item itemvalue="Batch.build" />
        <item itemvalue="Batch.test" />
        <item itemvalue="Batch.build-maven" />
      </list>
    </recent_temporary>
  </component>
  <component name="SharedIndexes">
    <attachedChunks>
      <set>
        <option value="bundled-python-sdk-4c141bd692a7-e2d783800521-com.jetbrains.pycharm.community.sharedIndexes.bundled-PC-251.26927.90" />
      </set>
    </attachedChunks>
  </component>
  <component name="SpellCheckerSettings" RuntimeDictionaries="0" Folders="0" CustomDictionaries="0" DefaultDictionary="application-level" UseSingleDictionary="true" transferred="true" />
  <component name="TaskManager">
    <task active="true" id="Default" summary="Default task">
      <changelist id="091cd905-c547-4179-9fb8-5e9879cce285" name="Changes" comment="Delete everything! This is a hard reset!" />
      <created>1752878619782</created>
      <option name="number" value="Default" />
      <option name="presentableId" value="Default" />
      <updated>1752878619782</updated>
    </task>
    <task id="LOCAL-00446" summary="Add `CompileException` for handling compilation errors and update `processTypeSuffixes` to check for type mismatches in literals. Extend `CompilerTest` with mismatch tests.">
      <option name="closed" value="true" />
      <created>1754581013015</created>
      <option name="number" value="00446" />
      <option name="presentableId" value="LOCAL-00446" />
      <option name="project" value="LOCAL" />
      <updated>1754581013015</updated>
    </task>
    <task id="LOCAL-00447" summary="Refactor `Compiler` to use `Optional` for type handling, improve error handling with `CompileException`, and update `CompilerTest` with additional mismatch test cases.">
      <option name="closed" value="true" />
      <created>1754581298762</created>
      <option name="number" value="00447" />
      <option name="presentableId" value="LOCAL-00447" />
      <option name="project" value="LOCAL" />
      <updated>1754581298762</updated>
    </task>
    <task id="LOCAL-00448" summary="Refactor `CompileException` to extend `Exception`, update `Compiler` methods to declare `throws CompileException`, and enhance `CompilerTest` with improved exception handling.">
      <option name="closed" value="true" />
      <created>1754581478290</created>
      <option name="number" value="00448" />
      <option name="presentableId" value="LOCAL-00448" />
      <option name="project" value="LOCAL" />
      <updated>1754581478290</updated>
    </task>
    <task id="LOCAL-00449" summary="Infer type from literal suffixes if no annotation is present, refactor type handling logic to use `Optional`, and update `CompilerTest` with suffix-based inference tests.">
      <option name="closed" value="true" />
      <created>1754582098462</created>
      <option name="number" value="00449" />
      <option name="presentableId" value="LOCAL-00449" />
      <option name="project" value="LOCAL" />
      <updated>1754582098462</updated>
    </task>
    <task id="LOCAL-00450" summary="Add support for multiple &quot;let&quot; statements separated by semicolons in `Compiler` and extend `CompilerTest` with relevant test cases.">
      <option name="closed" value="true" />
      <created>1754582519686</created>
      <option name="number" value="00450" />
      <option name="presentableId" value="LOCAL-00450" />
      <option name="project" value="LOCAL" />
      <updated>1754582519686</updated>
    </task>
    <task id="LOCAL-00451" summary="Refactor `Compiler` to extract single statement processing into `processSingleStatement`, streamline logic in `process`, and update `CompilerTest` for alignment.">
      <option name="closed" value="true" />
      <created>1754582728355</created>
      <option name="number" value="00451" />
      <option name="presentableId" value="LOCAL-00451" />
      <option name="project" value="LOCAL" />
      <updated>1754582728355</updated>
    </task>
    <task id="LOCAL-00452" summary="Add support for variable references in `let` statements, implement type compatibility checks, and update `CompilerTest` with new test cases.">
      <option name="closed" value="true" />
      <created>1754582905686</created>
      <option name="number" value="00452" />
      <option name="presentableId" value="LOCAL-00452" />
      <option name="project" value="LOCAL" />
      <updated>1754582905686</updated>
    </task>
    <task id="LOCAL-00453" summary="Add support for arithmetic expressions in `let` statements, implement type checks in `processArithmeticExpression`, and extend `CompilerTest` with arithmetic validation tests.">
      <option name="closed" value="true" />
      <created>1754583145250</created>
      <option name="number" value="00453" />
      <option name="presentableId" value="LOCAL-00453" />
      <option name="project" value="LOCAL" />
      <updated>1754583145250</updated>
    </task>
    <task id="LOCAL-00454" summary="Refactor type suffix and variable reference checks in `processArithmeticExpression` to improve readability, add early exits, and streamline logic.">
      <option name="closed" value="true" />
      <created>1754583230444</created>
      <option name="number" value="00454" />
      <option name="presentableId" value="LOCAL-00454" />
      <option name="project" value="LOCAL" />
      <updated>1754583230444</updated>
    </task>
    <task id="LOCAL-00455" summary="Add parentheses validation in `processArithmeticExpression`, support for nested expressions, and extend `CompilerTest` with relevant tests.">
      <option name="closed" value="true" />
      <created>1754583659012</created>
      <option name="number" value="00455" />
      <option name="presentableId" value="LOCAL-00455" />
      <option name="project" value="LOCAL" />
      <updated>1754583659012</updated>
    </task>
    <task id="LOCAL-00456" summary="Add support for mutable variables, implement reassignment validation, and update `CompilerTest` with relevant tests.">
      <option name="closed" value="true" />
      <created>1754583889782</created>
      <option name="number" value="00456" />
      <option name="presentableId" value="LOCAL-00456" />
      <option name="project" value="LOCAL" />
      <updated>1754583889782</updated>
    </task>
    <task id="LOCAL-00457" summary="Refactor variable tracking in `Compiler` to consolidate `definedVariables` and `mutableVariables` into a single `variables` map with `TypeInfo`.">
      <option name="closed" value="true" />
      <created>1754584045987</created>
      <option name="number" value="00457" />
      <option name="presentableId" value="LOCAL-00457" />
      <option name="project" value="LOCAL" />
      <updated>1754584045987</updated>
    </task>
    <task id="LOCAL-00458" summary="Add support for code blocks with proper scoping, nested block handling, and validation for mismatched braces. Update `CompilerTest` with block-related test cases.">
      <option name="closed" value="true" />
      <created>1754584474514</created>
      <option name="number" value="00458" />
      <option name="presentableId" value="LOCAL-00458" />
      <option name="project" value="LOCAL" />
      <updated>1754584474514</updated>
    </task>
    <task id="LOCAL-00459" summary="Refactor block processing logic in `Compiler` to improve readability, modularity, and handling of nested and mismatched braces. Introduce `TokenInfo` for token tracking.">
      <option name="closed" value="true" />
      <created>1754584842666</created>
      <option name="number" value="00459" />
      <option name="presentableId" value="LOCAL-00459" />
      <option name="project" value="LOCAL" />
      <updated>1754584842666</updated>
    </task>
    <task id="LOCAL-00460" summary="Refactor variable scope tracking in `Compiler` to use stack-based maps for improved scoping. Introduce functions for variable retrieval, undefined checks, and scope handling. Streamline variable validation in expressions.">
      <option name="closed" value="true" />
      <created>1754585352068</created>
      <option name="number" value="00460" />
      <option name="presentableId" value="LOCAL-00460" />
      <option name="project" value="LOCAL" />
      <updated>1754585352068</updated>
    </task>
    <task id="LOCAL-00461" summary="Enforce semicolon usage in `Compiler` for `let` and assignment statements. Update related logic and extend `CompilerTest` for validation.">
      <option name="closed" value="true" />
      <created>1754585801734</created>
      <option name="number" value="00461" />
      <option name="presentableId" value="LOCAL-00461" />
      <option name="project" value="LOCAL" />
      <updated>1754585801734</updated>
    </task>
    <task id="LOCAL-00462" summary="Add pointer support in `Compiler`, introducing mutable and immutable pointers, dereferencing, type safety, and validation logic. Extend `CompilerTest` with comprehensive pointer-related tests.">
      <option name="closed" value="true" />
      <created>1754586850229</created>
      <option name="number" value="00462" />
      <option name="presentableId" value="LOCAL-00462" />
      <option name="project" value="LOCAL" />
      <updated>1754586850229</updated>
    </task>
    <task id="LOCAL-00463" summary="Add `Bool` type support in `Compiler` with type checking for boolean literals, variable assignments, and mismatched types. Extend `CompilerTest` with comprehensive boolean-related tests.">
      <option name="closed" value="true" />
      <created>1754587262923</created>
      <option name="number" value="00463" />
      <option name="presentableId" value="LOCAL-00463" />
      <option name="project" value="LOCAL" />
      <updated>1754587262923</updated>
    </task>
    <task id="LOCAL-00464" summary="Refactor `Compiler` to improve type suffix handling, boolean literal checks, and variable reference validation. Introduce helper methods for readability and modularity.">
      <option name="closed" value="true" />
      <created>1754587965492</created>
      <option name="number" value="00464" />
      <option name="presentableId" value="LOCAL-00464" />
      <option name="project" value="LOCAL" />
      <updated>1754587965493</updated>
    </task>
    <task id="LOCAL-00465" summary="Handle invalid conditional expressions in `Compiler` by adding specific checks for missing operands and multiple operators. Extend validation logic to improve error handling.">
      <option name="closed" value="true" />
      <created>1754592856324</created>
      <option name="number" value="00465" />
      <option name="presentableId" value="LOCAL-00465" />
      <option name="project" value="LOCAL" />
      <updated>1754592856324</updated>
    </task>
    <task id="LOCAL-00466" summary="Add support for `let` statements with type annotations (`I32`) in `Compiler` and extend `CompilerTest` with corresponding tests. Update `.gitignore` to include `/out/` and `/test-reports/`.">
      <option name="closed" value="true" />
      <created>1754597383293</created>
      <option name="number" value="00466" />
      <option name="presentableId" value="LOCAL-00466" />
      <option name="project" value="LOCAL" />
      <updated>1754597383293</updated>
    </task>
    <task id="LOCAL-00467" summary="Extend `Compiler` to support multiple signed/unsigned integer type annotations for `let` statements. Update `CompilerTest` with relevant test cases.">
      <option name="closed" value="true" />
      <created>1754597570408</created>
      <option name="number" value="00467" />
      <option name="presentableId" value="LOCAL-00467" />
      <option name="project" value="LOCAL" />
      <updated>1754597570408</updated>
    </task>
    <task id="LOCAL-00468" summary="Refactor `Compiler` to separate handling of explicit type annotations and type suffixes. Extract validation utilities to `TestUtils` and update `CompilerTest` accordingly.">
      <option name="closed" value="true" />
      <created>1754597803139</created>
      <option name="number" value="00468" />
      <option name="presentableId" value="LOCAL-00468" />
      <option name="project" value="LOCAL" />
      <updated>1754597803139</updated>
    </task>
    <task id="LOCAL-00469" summary="Add test for type mismatch in `let` declarations, including suffix validation. Update `Compiler` to handle and check type suffix compatibility.">
      <option name="closed" value="true" />
      <created>1754597993488</created>
      <option name="number" value="00469" />
      <option name="presentableId" value="LOCAL-00469" />
      <option name="project" value="LOCAL" />
      <updated>1754597993488</updated>
    </task>
    <task id="LOCAL-00470" summary="Add support for `Bool` type in `let` statements and update tests accordingly">
      <option name="closed" value="true" />
      <created>1754598258439</created>
      <option name="number" value="00470" />
      <option name="presentableId" value="LOCAL-00470" />
      <option name="project" value="LOCAL" />
      <updated>1754598258439</updated>
    </task>
    <task id="LOCAL-00471" summary="Refactor `CompilerTest` into multiple test classes (`BasicCompilerTest`, `TypeSystemTest`, `VariableDeclarationTest`) to improve test organization and maintainability.">
      <option name="closed" value="true" />
      <created>1754598387347</created>
      <option name="number" value="00471" />
      <option name="presentableId" value="LOCAL-00471" />
      <option name="project" value="LOCAL" />
      <updated>1754598387347</updated>
    </task>
    <task id="LOCAL-00472" summary="Add support for character literals (`'a'`) in `let` statements, enforce `U8` type restriction, and update tests in `TypeSystemTest`.">
      <option name="closed" value="true" />
      <created>1754598610146</created>
      <option name="number" value="00472" />
      <option name="presentableId" value="LOCAL-00472" />
      <option name="project" value="LOCAL" />
      <updated>1754598610147</updated>
    </task>
    <task id="LOCAL-00473" summary="Add support for string literal initialization in `U8` arrays, enforce type and size validations, and introduce `ArrayTypeTest` for test coverage.">
      <option name="closed" value="true" />
      <created>1754598997356</created>
      <option name="number" value="00473" />
      <option name="presentableId" value="LOCAL-00473" />
      <option name="project" value="LOCAL" />
      <updated>1754598997356</updated>
    </task>
    <task id="LOCAL-00474" summary="Modularize `Compiler` by extracting `ArrayTypeCompiler`, `ExplicitTypeCompiler`, and `ImplicitTypeCompiler` classes. Introduce `TypeMapper` for Magma-to-C type mapping. Simplify `Compiler` logic for better extensibility and maintainability.">
      <option name="closed" value="true" />
      <created>1754599293751</created>
      <option name="number" value="00474" />
      <option name="presentableId" value="LOCAL-00474" />
      <option name="project" value="LOCAL" />
      <updated>1754599293751</updated>
    </task>
    <task id="LOCAL-00475" summary="Refactor `tryCompile` methods in `Compiler` modules to return `Optional` instead of empty strings for unmatched declarations. Update `Compiler` to handle `Optional` results. Streamline null checks and improve readability.">
      <option name="closed" value="true" />
      <created>1754599487421</created>
      <option name="number" value="00475" />
      <option name="presentableId" value="LOCAL-00475" />
      <option name="project" value="LOCAL" />
      <updated>1754599487421</updated>
    </task>
    <task id="LOCAL-00476" summary="Migrate build system to Maven. Replace `build.bat` and `test.bat` with Maven scripts. Add `pom.xml` with CheckStyle and JUnit setup. Update `.gitignore` with Maven-related files.">
      <option name="closed" value="true" />
      <created>1754599771370</created>
      <option name="number" value="00476" />
      <option name="presentableId" value="LOCAL-00476" />
      <option name="project" value="LOCAL" />
      <updated>1754599771370</updated>
    </task>
    <task id="LOCAL-00477" summary="Add CheckStyle configuration and rules. Replace `.iml` and `.idea/modules.xml` with Maven-managed files. Update `pom.xml` with revised CheckStyle plugin settings.">
      <option name="closed" value="true" />
      <created>1754600425221</created>
      <option name="number" value="00477" />
      <option name="presentableId" value="LOCAL-00477" />
      <option name="project" value="LOCAL" />
      <updated>1754600425221</updated>
    </task>
    <task id="LOCAL-00478" summary="Enable CheckStyle enforcement by updating Maven configuration and fixing CheckStyle plugin settings. Apply tab-based indentation across source and test files.">
      <option name="closed" value="true" />
      <created>1754600742861</created>
      <option name="number" value="00478" />
      <option name="presentableId" value="LOCAL-00478" />
      <option name="project" value="LOCAL" />
      <updated>1754600742861</updated>
    </task>
    <task id="LOCAL-00479" summary="Remove redundant CheckStyle rules and clean up workspace settings. Streamline CheckStyle configuration for tabs and improve braces enforcement.">
      <option name="closed" value="true" />
      <created>1754600891801</created>
      <option name="number" value="00479" />
      <option name="presentableId" value="LOCAL-00479" />
      <option name="project" value="LOCAL" />
      <updated>1754600891801</updated>
    </task>
    <task id="LOCAL-00480" summary="Nuke">
      <option name="closed" value="true" />
      <created>1754601621189</created>
      <option name="number" value="00480" />
      <option name="presentableId" value="LOCAL-00480" />
      <option name="project" value="LOCAL" />
      <updated>1754601621189</updated>
    </task>
    <task id="LOCAL-00481" summary="Introduce `magma.Compiler` and `magma.CompileException`. Add basic compilation logic with tests. Update documentation and CheckStyle references.">
      <option name="closed" value="true" />
      <created>1754601754059</created>
      <option name="number" value="00481" />
      <option name="presentableId" value="LOCAL-00481" />
      <option name="project" value="LOCAL" />
      <updated>1754601754059</updated>
    </task>
    <task id="LOCAL-00482" summary="Remove">
      <option name="closed" value="true" />
      <created>1754601768242</created>
      <option name="number" value="00482" />
      <option name="presentableId" value="LOCAL-00482" />
      <option name="project" value="LOCAL" />
      <updated>1754601768243</updated>
    </task>
    <task id="LOCAL-00483" summary="Refactor and clean up: update Maven build/test scripts with validation phase, revise CheckStyle configuration, and adjust workspace settings for JUnit 5 integration.">
      <option name="closed" value="true" />
      <created>1754602219386</created>
      <option name="number" value="00483" />
      <option name="presentableId" value="LOCAL-00483" />
      <option name="project" value="LOCAL" />
      <updated>1754602219386</updated>
    </task>
    <task id="LOCAL-00484" summary="Refactor: update CheckStyle configuration to allow wildcard imports, adjust JUnit test in `CompilerTest`, and revise `.idea` workspace settings.">
      <option name="closed" value="true" />
      <created>1754602930098</created>
      <option name="number" value="00484" />
      <option name="presentableId" value="LOCAL-00484" />
      <option name="project" value="LOCAL" />
      <updated>1754602930098</updated>
    </task>
    <task id="LOCAL-00485" summary="Introduce LET variable pattern matching in `Compiler`. Add support for converting `let` statements to `int32_t` declarations with corresponding tests in `CompilerTest`.">
      <option name="closed" value="true" />
      <created>1754603170214</created>
      <option name="number" value="00485" />
      <option name="presentableId" value="LOCAL-00485" />
      <option name="project" value="LOCAL" />
      <updated>1754603170214</updated>
    </task>
    <task id="LOCAL-00486" summary="Add optional type annotation support in `Compiler` for `let` statements. Update `CompilerTest` with additional cases for validation.">
      <option name="closed" value="true" />
      <created>1754603588206</created>
      <option name="number" value="00486" />
      <option name="presentableId" value="LOCAL-00486" />
      <option name="project" value="LOCAL" />
      <updated>1754603588206</updated>
    </task>
    <task id="LOCAL-00487" summary="Add support for `U64` suffix in `let` statements in `Compiler`. Update `CompilerTest` with relevant test cases. Adjust workspace settings for JUnit configurations.">
      <option name="closed" value="true" />
      <created>1754603755010</created>
      <option name="number" value="00487" />
      <option name="presentableId" value="LOCAL-00487" />
      <option name="project" value="LOCAL" />
      <updated>1754603755010</updated>
    </task>
    <task id="LOCAL-00488" summary="Add support for signed and unsigned integer type annotations and suffixes in `Compiler`. Introduce corresponding test cases in `SignedIntegerTypeTest`, `UnsignedIntegerTypeTest`, and `CompilerTest`. Refactor pattern matching and type handling logic.">
      <option name="closed" value="true" />
      <created>1754604084524</created>
      <option name="number" value="00488" />
      <option name="presentableId" value="LOCAL-00488" />
      <option name="project" value="LOCAL" />
      <updated>1754604084524</updated>
    </task>
    <task id="LOCAL-00489" summary="Add type compatibility checks for signed and unsigned integer annotations and suffixes in `Compiler`. Update `CompilerTest` with new cases for validation.">
      <option name="closed" value="true" />
      <created>1754604744947</created>
      <option name="number" value="00489" />
      <option name="presentableId" value="LOCAL-00489" />
      <option name="project" value="LOCAL" />
      <updated>1754604744947</updated>
    </task>
    <task id="LOCAL-00490" summary="Add boolean type support in `Compiler` with `Bool` annotations and literals. Introduce `BooleanTypeTest` for validation. Refactor pattern matching and statement processing logic.">
      <option name="closed" value="true" />
      <created>1754605778722</created>
      <option name="number" value="00490" />
      <option name="presentableId" value="LOCAL-00490" />
      <option name="project" value="LOCAL" />
      <updated>1754605778722</updated>
    </task>
    <task id="LOCAL-00491" summary="Update `.idea/workspace.xml` and `checkstyle.xml`: add `BooleanTypeTest` references and new rule to disallow inner classes.">
      <option name="closed" value="true" />
      <created>1754606005496</created>
      <option name="number" value="00491" />
      <option name="presentableId" value="LOCAL-00491" />
      <option name="project" value="LOCAL" />
      <updated>1754606005496</updated>
    </task>
    <task id="LOCAL-00492" summary="Add character literal support in `Compiler` with ASCII conversion. Update `UnsignedIntegerTypeTest` with relevant test cases. Simplify type mapping logic for maintainability.">
      <option name="closed" value="true" />
      <created>1754606328243</created>
      <option name="number" value="00492" />
      <option name="presentableId" value="LOCAL-00492" />
      <option name="project" value="LOCAL" />
      <updated>1754606328243</updated>
    </task>
    <task id="LOCAL-00493" summary="Add array type support in `Compiler` with `[type; size]` syntax. Update `CompilerTest` and introduce `ArrayTypeTest` for validation. Refactor `let` processing logic for arrays.">
      <option name="closed" value="true" />
      <created>1754606614500</created>
      <option name="number" value="00493" />
      <option name="presentableId" value="LOCAL-00493" />
      <option name="project" value="LOCAL" />
      <updated>1754606614500</updated>
    </task>
    <task id="LOCAL-00494" summary="Remove `FieldCountCheck` rule from `checkstyle.xml`.">
      <option name="closed" value="true" />
      <created>1754606749494</created>
      <option name="number" value="00494" />
      <option name="presentableId" value="LOCAL-00494" />
      <option name="project" value="LOCAL" />
      <updated>1754606749494</updated>
    </task>
    <option name="localTasksCounter" value="495" />
    <servers />
  </component>
  <component name="UnknownFeatures">
    <option featureType="com.intellij.fileTypeFactory" implementationName="*.ts" />
  </component>
  <component name="Vcs.Log.Tabs.Properties">
    <option name="TAB_STATES">
      <map>
        <entry key="MAIN">
          <value>
            <State />
          </value>
        </entry>
      </map>
    </option>
  </component>
  <component name="VcsManagerConfiguration">
    <option name="CHECK_CODE_CLEANUP_BEFORE_PROJECT_COMMIT_PROFILE" value="Project Default" />
    <MESSAGE value="Add support for `Bool` type in `let` statements and update tests accordingly" />
    <MESSAGE value="Refactor `CompilerTest` into multiple test classes (`BasicCompilerTest`, `TypeSystemTest`, `VariableDeclarationTest`) to improve test organization and maintainability." />
    <MESSAGE value="Add support for character literals (`'a'`) in `let` statements, enforce `U8` type restriction, and update tests in `TypeSystemTest`." />
    <MESSAGE value="Add support for string literal initialization in `U8` arrays, enforce type and size validations, and introduce `ArrayTypeTest` for test coverage." />
    <MESSAGE value="Modularize `Compiler` by extracting `ArrayTypeCompiler`, `ExplicitTypeCompiler`, and `ImplicitTypeCompiler` classes. Introduce `TypeMapper` for Magma-to-C type mapping. Simplify `Compiler` logic for better extensibility and maintainability." />
    <MESSAGE value="Refactor `tryCompile` methods in `Compiler` modules to return `Optional` instead of empty strings for unmatched declarations. Update `Compiler` to handle `Optional` results. Streamline null checks and improve readability." />
    <MESSAGE value="Migrate build system to Maven. Replace `build.bat` and `test.bat` with Maven scripts. Add `pom.xml` with CheckStyle and JUnit setup. Update `.gitignore` with Maven-related files." />
    <MESSAGE value="Add CheckStyle configuration and rules. Replace `.iml` and `.idea/modules.xml` with Maven-managed files. Update `pom.xml` with revised CheckStyle plugin settings." />
    <MESSAGE value="Enable CheckStyle enforcement by updating Maven configuration and fixing CheckStyle plugin settings. Apply tab-based indentation across source and test files." />
    <MESSAGE value="Remove redundant CheckStyle rules and clean up workspace settings. Streamline CheckStyle configuration for tabs and improve braces enforcement." />
    <MESSAGE value="Nuke" />
    <MESSAGE value="Introduce `magma.Compiler` and `magma.CompileException`. Add basic compilation logic with tests. Update documentation and CheckStyle references." />
    <MESSAGE value="Remove" />
    <MESSAGE value="Refactor and clean up: update Maven build/test scripts with validation phase, revise CheckStyle configuration, and adjust workspace settings for JUnit 5 integration." />
    <MESSAGE value="Refactor: update CheckStyle configuration to allow wildcard imports, adjust JUnit test in `CompilerTest`, and revise `.idea` workspace settings." />
    <MESSAGE value="Introduce LET variable pattern matching in `Compiler`. Add support for converting `let` statements to `int32_t` declarations with corresponding tests in `CompilerTest`." />
    <MESSAGE value="Add optional type annotation support in `Compiler` for `let` statements. Update `CompilerTest` with additional cases for validation." />
    <MESSAGE value="Add support for `U64` suffix in `let` statements in `Compiler`. Update `CompilerTest` with relevant test cases. Adjust workspace settings for JUnit configurations." />
    <MESSAGE value="Add support for signed and unsigned integer type annotations and suffixes in `Compiler`. Introduce corresponding test cases in `SignedIntegerTypeTest`, `UnsignedIntegerTypeTest`, and `CompilerTest`. Refactor pattern matching and type handling logic." />
    <MESSAGE value="Add type compatibility checks for signed and unsigned integer annotations and suffixes in `Compiler`. Update `CompilerTest` with new cases for validation." />
    <MESSAGE value="Add boolean type support in `Compiler` with `Bool` annotations and literals. Introduce `BooleanTypeTest` for validation. Refactor pattern matching and statement processing logic." />
    <MESSAGE value="Update `.idea/workspace.xml` and `checkstyle.xml`: add `BooleanTypeTest` references and new rule to disallow inner classes." />
    <MESSAGE value="Add character literal support in `Compiler` with ASCII conversion. Update `UnsignedIntegerTypeTest` with relevant test cases. Simplify type mapping logic for maintainability." />
    <MESSAGE value="Add array type support in `Compiler` with `[type; size]` syntax. Update `CompilerTest` and introduce `ArrayTypeTest` for validation. Refactor `let` processing logic for arrays." />
    <MESSAGE value="Remove `FieldCountCheck` rule from `checkstyle.xml`." />
    <option name="LAST_COMMIT_MESSAGE" value="Remove `FieldCountCheck` rule from `checkstyle.xml`." />
  </component>
  <component name="XDebuggerManager">
    <pin-to-top-manager>
      <pinned-members>
        <PinnedItemInfo parentTag="java.util.HashMap$Node" memberName="key" />
        <PinnedItemInfo parentTag="magma.compile.MapNode" memberName="maybeType" />
        <PinnedItemInfo parentTag="java.util.HashMap$Node" memberName="value" />
        <PinnedItemInfo parentTag="jvm.collect.map.JavaMap" memberName="map" />
        <PinnedItemInfo parentTag="magma.option.Tuple" memberName="right" />
        <PinnedItemInfo parentTag="magma.Main$Maps$JavaMap" memberName="internalMap" />
        <PinnedItemInfo parentTag="magma.Main$StructType" memberName="properties" />
      </pinned-members>
    </pin-to-top-manager>
  </component>
</project>
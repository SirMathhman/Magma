<?xml version="1.0" encoding="UTF-8"?>
<project version="4">
  <component name="AnalysisUIOptions">
    <option name="ANALYZE_INJECTED_CODE" value="false" />
  </component>
  <component name="AutoImportSettings">
    <option name="autoReloadType" value="SELECTIVE" />
  </component>
  <component name="ChangeListManager">
    <list default="true" id="091cd905-c547-4179-9fb8-5e9879cce285" name="Changes" comment="Refactor `Main.java` to extract `ArrayDeclaration` and `MultiDimArrayDeclaration` into separate files for improved modularity and clarity.">
      <change beforePath="$PROJECT_DIR$/.idea/workspace.xml" beforeDir="false" afterPath="$PROJECT_DIR$/.idea/workspace.xml" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/src/main/java/Main.java" beforeDir="false" afterPath="$PROJECT_DIR$/src/main/java/Main.java" afterDir="false" />
    </list>
    <option name="SHOW_DIALOG" value="false" />
    <option name="HIGHLIGHT_CONFLICTS" value="true" />
    <option name="HIGHLIGHT_NON_ACTIVE_CHANGELIST" value="false" />
    <option name="LAST_RESOLUTION" value="IGNORE" />
  </component>
  <component name="FileTemplateManagerImpl">
    <option name="RECENT_TEMPLATES">
      <list>
        <option value="Interface" />
        <option value="Record" />
        <option value="Class" />
      </list>
    </option>
  </component>
  <component name="Git.Settings">
    <option name="PUSH_AUTO_UPDATE" value="true" />
    <option name="RECENT_GIT_ROOT_PATH" value="$PROJECT_DIR$" />
  </component>
  <component name="GitHubPullRequestSearchHistory">{
  &quot;lastFilter&quot;: {
    &quot;state&quot;: &quot;OPEN&quot;,
    &quot;assignee&quot;: &quot;SirMathhman&quot;
  }
}</component>
  <component name="GithubProjectSettings">
    <option name="branchProtectionPatterns">
      <list>
        <option value="master" />
      </list>
    </option>
  </component>
  <component name="GithubPullRequestsUISettings">{
  &quot;selectedUrlAndAccountId&quot;: {
    &quot;url&quot;: &quot;https://github.com/SirMathhman/Magma.git&quot;,
    &quot;accountId&quot;: &quot;5ccce926-293e-4330-b2a7-270ea3228439&quot;
  }
}</component>
  <component name="ProblemsViewState">
    <option name="selectedTabId" value="CurrentFile" />
  </component>
  <component name="ProjectColorInfo">{
  &quot;associatedIndex&quot;: 3
}</component>
  <component name="ProjectId" id="304EoLp6ZWsUcvlOP9yXLjMrk5A" />
  <component name="ProjectLevelVcsManager">
    <OptionsSetting value="false" id="Update" />
    <ConfirmationsSetting value="2" id="Add" />
  </component>
  <component name="ProjectViewState">
    <option name="hideEmptyMiddlePackages" value="true" />
    <option name="showLibraryContents" value="true" />
  </component>
  <component name="PropertiesComponent"><![CDATA[{
  "keyToString": {
    "Application.HelloWorld.executor": "Run",
    "Application.Main.executor": "Run",
    "Application.MainV2.executor": "Run",
    "Batch.build.executor": "Run",
    "Batch.test.executor": "Run",
    "Downloaded.Files.Path.Enabled": "false",
    "JUnit.All in Magma.executor": "Run",
    "JUnit.ApplicationTest.executor": "Run",
    "JUnit.MapNodeImmutabilityTest.testMergeReturnsNewInstance.executor": "Debug",
    "ModuleVcsDetector.initialDetectionPerformed": "true",
    "Python tests.Python tests for test_basic.test_compile_non_empty_returns_placeholder.executor": "Run",
    "Python tests.Python tests for test_compiler.test_compile_empty_input_creates_empty_main.executor": "Run",
    "Python tests.Python tests for test_compiler.test_compile_inner_function_with_inferred_declaration.executor": "Run",
    "Python tests.Python tests for test_misc.test_compile_class_fn_param_function_type.executor": "Run",
    "Python tests.Python tests in test_basic.py.executor": "Run",
    "Python tests.Python tests in test_compiler.py.executor": "Run",
    "Python tests.Python tests in test_flow.py.executor": "Run",
    "Python tests.Python tests in test_imports.py.executor": "Run",
    "Python tests.Python tests in test_misc.py.executor": "Run",
    "Python tests.Python tests in tests.executor": "Run",
    "Python tests.pytest for test_basic.test_compile_non_empty_returns_placeholder.executor": "Run",
    "Python.__init__.executor": "Run",
    "Python.utils.executor": "Run",
    "Repository.Attach.Annotations": "false",
    "Repository.Attach.JavaDocs": "false",
    "Repository.Attach.Sources": "false",
    "RunOnceActivity.ShowReadmeOnStart": "true",
    "RunOnceActivity.git.unshallow": "true",
    "git-widget-placeholder": "master",
    "introduce.parameter.lambda": "true",
    "junie.onboarding.icon.badge.shown": "true",
    "kotlin-language-version-configured": "true",
    "last_directory_selection": "C:/Users/mathm/IdeaProjects/Magma/test/java",
    "last_opened_file_path": "C:/Users/mathm/IdeaProjects/Magma",
    "onboarding.tips.debug.path": "C:/Users/mathm/IdeaProjects/Magma/src/Main.java",
    "project.structure.last.edited": "Project",
    "project.structure.proportion": "0.15044248",
    "project.structure.side.proportion": "0.2",
    "run.code.analysis.last.selected.profile": "pProject Default",
    "settings.editor.selected.configurable": "preferences.sourceCode.Java",
    "to.speed.mode.migration.done": "true"
  }
}]]></component>
  <component name="RecentsManager">
    <key name="CreateClassDialog.RecentsKey">
      <recent name="magma" />
      <recent name="magma.error" />
      <recent name="magma.rule" />
      <recent name="magma.node" />
    </key>
    <key name="MoveFile.RECENT_KEYS">
      <recent name="C:\Users\mathm\IdeaProjects\Magma\src\java" />
      <recent name="C:\Users\mathm\IdeaProjects\Magma\.venv" />
    </key>
    <key name="MoveMembersDialog.RECENTS_KEY">
      <recent name="magma.Placeholder" />
      <recent name="magma.Main.Lists" />
      <recent name="magma.Application" />
      <recent name="magma.ApplicationTest" />
      <recent name="magma.Lang" />
    </key>
    <key name="ExtractSuperBase.RECENT_KEYS">
      <recent name="magma.node" />
      <recent name="magma" />
      <recent name="magma.divide" />
    </key>
    <key name="MoveClassesOrPackagesDialog.RECENTS_KEY">
      <recent name="magma.node" />
      <recent name="magma.result" />
      <recent name="magma.option" />
      <recent name="magma" />
      <recent name="magma.rule.divide" />
    </key>
    <key name="MoveInnerDialog.RECENTS_KEY">
      <recent name="" />
      <recent name="magma" />
      <recent name="magma.node" />
    </key>
    <key name="CopyClassDialog.RECENTS_KEY">
      <recent name="magma" />
    </key>
  </component>
  <component name="RunManager" selected="JUnit.All in Magma">
    <configuration name="test" type="BatchConfigurationType" factoryName="Batch" temporary="true">
      <module name="Magma" />
      <option name="INTERPRETER_OPTIONS" value="" />
      <option name="WORKING_DIRECTORY" value="$PROJECT_DIR$" />
      <option name="PARENT_ENVS" value="true" />
      <option name="SCRIPT_NAME" value="test.bat" />
      <option name="PARAMETERS" value="" />
      <method v="2">
        <option name="Make" enabled="true" />
      </method>
    </configuration>
    <configuration name="All in Magma" type="JUnit" factoryName="JUnit" temporary="true" nameIsGenerated="true">
      <module name="Magma" />
      <option name="PACKAGE_NAME" value="" />
      <option name="TEST_OBJECT" value="package" />
      <method v="2">
        <option name="Make" enabled="true" />
      </method>
    </configuration>
    <recent_temporary>
      <list>
        <item itemvalue="JUnit.All in Magma" />
        <item itemvalue="Batch.test" />
        <item itemvalue="JUnit.All in Magma" />
        <item itemvalue="Batch.test" />
      </list>
    </recent_temporary>
  </component>
  <component name="SpellCheckerSettings" RuntimeDictionaries="0" Folders="0" CustomDictionaries="0" DefaultDictionary="application-level" UseSingleDictionary="true" transferred="true" />
  <component name="TaskManager">
    <task active="true" id="Default" summary="Default task">
      <changelist id="091cd905-c547-4179-9fb8-5e9879cce285" name="Changes" comment="Delete everything! This is a hard reset!" />
      <created>1752878619782</created>
      <option name="number" value="Default" />
      <option name="presentableId" value="Default" />
      <updated>1752878619782</updated>
    </task>
    <task id="LOCAL-00371" summary="Remove redundant assertion messages in `MainTest` to simplify and improve readability of test cases.">
      <option name="closed" value="true" />
      <created>1754458523083</created>
      <option name="number" value="00371" />
      <option name="presentableId" value="LOCAL-00371" />
      <option name="project" value="LOCAL" />
      <updated>1754458523083</updated>
    </task>
    <task id="LOCAL-00372" summary="Replace `add` and `processString` methods in `Main` with `compile` method for Magma-to-C code generation and update `MainTest` for corresponding unit tests.">
      <option name="closed" value="true" />
      <created>1754459651699</created>
      <option name="number" value="00372" />
      <option name="presentableId" value="LOCAL-00372" />
      <option name="project" value="LOCAL" />
      <updated>1754459651699</updated>
    </task>
    <task id="LOCAL-00373" summary="Support variable name extraction in `compile` for I32 declarations and add corresponding tests.">
      <option name="closed" value="true" />
      <created>1754459798041</created>
      <option name="number" value="00373" />
      <option name="presentableId" value="LOCAL-00373" />
      <option name="project" value="LOCAL" />
      <updated>1754459798041</updated>
    </task>
    <task id="LOCAL-00374" summary="Add support for all integer type declarations in `compile` and extend tests accordingly.">
      <option name="closed" value="true" />
      <created>1754459945077</created>
      <option name="number" value="00374" />
      <option name="presentableId" value="LOCAL-00374" />
      <option name="project" value="LOCAL" />
      <updated>1754459945077</updated>
    </task>
    <task id="LOCAL-00375" summary="Refactor `compile` method by delegating variable parsing to helper methods, improving readability and maintainability.">
      <option name="closed" value="true" />
      <created>1754460044403</created>
      <option name="number" value="00375" />
      <option name="presentableId" value="LOCAL-00375" />
      <option name="project" value="LOCAL" />
      <updated>1754460044403</updated>
    </task>
    <task id="LOCAL-00376" summary="Add support for `Bool` type in `compile` method and extend `MainTest` with unit tests for boolean declarations.">
      <option name="closed" value="true" />
      <created>1754460195851</created>
      <option name="number" value="00376" />
      <option name="presentableId" value="LOCAL-00376" />
      <option name="project" value="LOCAL" />
      <updated>1754460195851</updated>
    </task>
    <task id="LOCAL-00377" summary="Refactor `parseTypeDeclaration` for clarity by reversing condition, improving boolean handling, and streamlining return logic.">
      <option name="closed" value="true" />
      <created>1754460221472</created>
      <option name="number" value="00377" />
      <option name="presentableId" value="LOCAL-00377" />
      <option name="project" value="LOCAL" />
      <updated>1754460221472</updated>
    </task>
    <task id="LOCAL-00378" summary="Extend `compile` to handle varied whitespace patterns in variable declarations and update tests in `MainTest`.">
      <option name="closed" value="true" />
      <created>1754460382285</created>
      <option name="number" value="00378" />
      <option name="presentableId" value="LOCAL-00378" />
      <option name="project" value="LOCAL" />
      <updated>1754460382285</updated>
    </task>
    <task id="LOCAL-00379" summary="Support character literals in `compile` for I8 type and extend tests in `MainTest` with unit cases for literals and escape sequences.">
      <option name="closed" value="true" />
      <created>1754460620210</created>
      <option name="number" value="00379" />
      <option name="presentableId" value="LOCAL-00379" />
      <option name="project" value="LOCAL" />
      <updated>1754460620211</updated>
    </task>
    <task id="LOCAL-00380" summary="Refactor `compile` to introduce `parseTypePattern` and `parseCharacterLiteral` for improved modularity and add support for character literals with escape sequences in I8 type.">
      <option name="closed" value="true" />
      <created>1754460788834</created>
      <option name="number" value="00380" />
      <option name="presentableId" value="LOCAL-00380" />
      <option name="project" value="LOCAL" />
      <updated>1754460788834</updated>
    </task>
    <task id="LOCAL-00381" summary="Add array support in `compile` with `parseArrayDeclaration`, extend tests with `ArrayTest` for varied array declarations, whitespace handling, and edge cases.">
      <option name="closed" value="true" />
      <created>1754461421000</created>
      <option name="number" value="00381" />
      <option name="presentableId" value="LOCAL-00381" />
      <option name="project" value="LOCAL" />
      <updated>1754461421000</updated>
    </task>
    <task id="LOCAL-00382" summary="Add `test_array` for validating array handling in `compile`, including varied declarations, whitespace patterns, and primitive types.">
      <option name="closed" value="true" />
      <created>1754461786065</created>
      <option name="number" value="00382" />
      <option name="presentableId" value="LOCAL-00382" />
      <option name="project" value="LOCAL" />
      <updated>1754461786065</updated>
    </task>
    <task id="LOCAL-00383" summary="Remove `test_array` as it is no longer required.">
      <option name="closed" value="true" />
      <created>1754461805439</created>
      <option name="number" value="00383" />
      <option name="presentableId" value="LOCAL-00383" />
      <option name="project" value="LOCAL" />
      <updated>1754461805439</updated>
    </task>
    <task id="LOCAL-00384" summary="Refactor `compile` to unify variable and array parsing into `parseDeclaration`, improving modularity and structure validation.">
      <option name="closed" value="true" />
      <created>1754462131712</created>
      <option name="number" value="00384" />
      <option name="presentableId" value="LOCAL-00384" />
      <option name="project" value="LOCAL" />
      <updated>1754462131712</updated>
    </task>
    <task id="LOCAL-00385" summary="Introduce `Declaration`, `ArrayType`, and `TypeValue` records to streamline type and value handling in `compile`, refactor methods for improved modularity and clarity.">
      <option name="closed" value="true" />
      <created>1754462467611</created>
      <option name="number" value="00385" />
      <option name="presentableId" value="LOCAL-00385" />
      <option name="project" value="LOCAL" />
      <updated>1754462467611</updated>
    </task>
    <task id="LOCAL-00386" summary="Support nested array declarations in `compile`, refactor `parseArrayType` to handle multidimensional arrays, and enhance tests with `ArrayTest` for nested arrays.">
      <option name="closed" value="true" />
      <created>1754463066307</created>
      <option name="number" value="00386" />
      <option name="presentableId" value="LOCAL-00386" />
      <option name="project" value="LOCAL" />
      <updated>1754463066307</updated>
    </task>
    <task id="LOCAL-00387" summary="Add `compile` support for string literals and extend array handling with complex nested declarations, enhancing test cases for varied types and edge cases.">
      <option name="closed" value="true" />
      <created>1754463780126</created>
      <option name="number" value="00387" />
      <option name="presentableId" value="LOCAL-00387" />
      <option name="project" value="LOCAL" />
      <updated>1754463780126</updated>
    </task>
    <task id="LOCAL-00388" summary="Fix `parseArrayType` logic to correctly handle nested array dimensions and element type parsing, improving declaration generation and validation.">
      <option name="closed" value="true" />
      <created>1754464097795</created>
      <option name="number" value="00388" />
      <option name="presentableId" value="LOCAL-00388" />
      <option name="project" value="LOCAL" />
      <updated>1754464097795</updated>
    </task>
    <task id="LOCAL-00389" summary="Remove `StringTestManual` and refactor string handling in `compile` with modular methods, optimizing string literal parsing and simplifying array handling logic.">
      <option name="closed" value="true" />
      <created>1754464239106</created>
      <option name="number" value="00389" />
      <option name="presentableId" value="LOCAL-00389" />
      <option name="project" value="LOCAL" />
      <updated>1754464239106</updated>
    </task>
    <task id="LOCAL-00390" summary="Remove array support from `compile` and delete associated classes (`ArrayTest`, `ArrayType`, `Declaration`, `Main`), simplifying the codebase.">
      <option name="closed" value="true" />
      <created>1754500997108</created>
      <option name="number" value="00390" />
      <option name="presentableId" value="LOCAL-00390" />
      <option name="project" value="LOCAL" />
      <updated>1754500997108</updated>
    </task>
    <task id="LOCAL-00391" summary="Add initial implementation of `Magma` Java to C compiler, including basic `compile` functionality, support for `Hello World`, integer and string arrays, and corresponding unit tests.">
      <option name="closed" value="true" />
      <created>1754503679754</created>
      <option name="number" value="00391" />
      <option name="presentableId" value="LOCAL-00391" />
      <option name="project" value="LOCAL" />
      <updated>1754503679754</updated>
    </task>
    <task id="LOCAL-00392" summary="Reformat">
      <option name="closed" value="true" />
      <created>1754503775490</created>
      <option name="number" value="00392" />
      <option name="presentableId" value="LOCAL-00392" />
      <option name="project" value="LOCAL" />
      <updated>1754503775490</updated>
    </task>
    <task id="LOCAL-00393" summary="Add `compile` support for variable declarations and implement `let x : I32 = 0;` to `int x = 0;` conversion.">
      <option name="closed" value="true" />
      <created>1754503954623</created>
      <option name="number" value="00393" />
      <option name="presentableId" value="LOCAL-00393" />
      <option name="project" value="LOCAL" />
      <updated>1754503954623</updated>
    </task>
    <task id="LOCAL-00394" summary="Add support for multiple integer types (I8-I64, U8-U64) in `compile`, implement type mapping logic, and extend tests.">
      <option name="closed" value="true" />
      <created>1754504253507</created>
      <option name="number" value="00394" />
      <option name="presentableId" value="LOCAL-00394" />
      <option name="project" value="LOCAL" />
      <updated>1754504253507</updated>
    </task>
    <task id="LOCAL-00395" summary="Refactor `processVariableDeclaration` and `findMatchingTypeMapper` to use `Optional`, improve formatting, and clean up whitespace.">
      <option name="closed" value="true" />
      <created>1754504298676</created>
      <option name="number" value="00395" />
      <option name="presentableId" value="LOCAL-00395" />
      <option name="project" value="LOCAL" />
      <updated>1754504298676</updated>
    </task>
    <task id="LOCAL-00396" summary="Add support for typeless variable declarations in `compile`, defaulting to I32, and update tests accordingly.">
      <option name="closed" value="true" />
      <created>1754504712473</created>
      <option name="number" value="00396" />
      <option name="presentableId" value="LOCAL-00396" />
      <option name="project" value="LOCAL" />
      <updated>1754504712473</updated>
    </task>
    <task id="LOCAL-00397" summary="Refactor `compile` to simplify typeless declaration check, improve formatting, and clean up whitespace.">
      <option name="closed" value="true" />
      <created>1754504765252</created>
      <option name="number" value="00397" />
      <option name="presentableId" value="LOCAL-00397" />
      <option name="project" value="LOCAL" />
      <updated>1754504765252</updated>
    </task>
    <task id="LOCAL-00398" summary="Add type inference from value suffixes (e.g., `100U64`) in `compile`, refactor related logic, and introduce `TypeInferenceTest`.">
      <option name="closed" value="true" />
      <created>1754505068482</created>
      <option name="number" value="00398" />
      <option name="presentableId" value="LOCAL-00398" />
      <option name="project" value="LOCAL" />
      <updated>1754505068482</updated>
    </task>
    <task id="LOCAL-00399" summary="Add support for `Bool` type in `compile`, update type inference logic, include `stdbool.h` as needed, and extend tests.">
      <option name="closed" value="true" />
      <created>1754505458582</created>
      <option name="number" value="00399" />
      <option name="presentableId" value="LOCAL-00399" />
      <option name="project" value="LOCAL" />
      <updated>1754505458582</updated>
    </task>
    <task id="LOCAL-00400" summary="Add support for `Bool` type in `compile`, update type inference logic, include `stdbool.h` as needed, and extend tests.">
      <option name="closed" value="true" />
      <created>1754506040494</created>
      <option name="number" value="00400" />
      <option name="presentableId" value="LOCAL-00400" />
      <option name="project" value="LOCAL" />
      <updated>1754506040494</updated>
    </task>
    <task id="LOCAL-00401" summary="Update README to reflect transition from Java to Magma language, add details for new array declaration syntax, and revise supported features list. Extend compiler functionality for array declarations (`let` syntax), implement comprehensive handling in `compile`, and add tests for array handling with various types and sizes.">
      <option name="closed" value="true" />
      <created>1754507547778</created>
      <option name="number" value="00401" />
      <option name="presentableId" value="LOCAL-00401" />
      <option name="project" value="LOCAL" />
      <updated>1754507547778</updated>
    </task>
    <task id="LOCAL-00402" summary="Refactor test cases to use inline `let` declarations instead of class-wrapped code snippets, remove">
      <option name="closed" value="true" />
      <created>1754507732929</created>
      <option name="number" value="00402" />
      <option name="presentableId" value="LOCAL-00402" />
      <option name="project" value="LOCAL" />
      <updated>1754507732929</updated>
    </task>
    <task id="LOCAL-00403" summary="Add conditional `#include &lt;stdio.h&gt;` based on I/O operation presence in `magmaCode`.">
      <option name="closed" value="true" />
      <created>1754507962888</created>
      <option name="number" value="00403" />
      <option name="presentableId" value="LOCAL-00403" />
      <option name="project" value="LOCAL" />
      <updated>1754507962889</updated>
    </task>
    <task id="LOCAL-00404" summary="Remove redundant conditional `#include &lt;stdio.h&gt;` logic and refactor formatting in `generateVariableDeclarationCCode`.">
      <option name="closed" value="true" />
      <created>1754507986375</created>
      <option name="number" value="00404" />
      <option name="presentableId" value="LOCAL-00404" />
      <option name="project" value="LOCAL" />
      <updated>1754507986375</updated>
    </task>
    <task id="LOCAL-00405" summary="Remove support for `Hello World`, integer array, and string array C code generation, along with corresponding Magma pattern checks. Simplify array declaration handling in `compile`.">
      <option name="closed" value="true" />
      <created>1754508043985</created>
      <option name="number" value="00405" />
      <option name="presentableId" value="LOCAL-00405" />
      <option name="project" value="LOCAL" />
      <updated>1754508043985</updated>
    </task>
    <task id="LOCAL-00406" summary="Refactor `compile` to unify declaration handling for arrays and variables, add `containsDeclarations` method, and implement `generateDeclarationCCode`.">
      <option name="closed" value="true" />
      <created>1754508316370</created>
      <option name="number" value="00406" />
      <option name="presentableId" value="LOCAL-00406" />
      <option name="project" value="LOCAL" />
      <updated>1754508316370</updated>
    </task>
    <task id="LOCAL-00407" summary="Remove unused methods for array and variable declaration handling, simplify and clean up `Main.java`.">
      <option name="closed" value="true" />
      <created>1754508350509</created>
      <option name="number" value="00407" />
      <option name="presentableId" value="LOCAL-00407" />
      <option name="project" value="LOCAL" />
      <updated>1754508350509</updated>
    </task>
    <task id="LOCAL-00408" summary="Add support for multi-dimensional arrays in `compile`, including parsing, C code generation, and unit tests.">
      <option name="closed" value="true" />
      <created>1754509020408</created>
      <option name="number" value="00408" />
      <option name="presentableId" value="LOCAL-00408" />
      <option name="project" value="LOCAL" />
      <updated>1754509020408</updated>
    </task>
    <task id="LOCAL-00409" summary="Refactor tests to replace `assertTrue` checks with `assertEquals` for improved clarity and reliability, and add `TestOutput.java` for char type debugging.">
      <option name="closed" value="true" />
      <created>1754509357800</created>
      <option name="number" value="00409" />
      <option name="presentableId" value="LOCAL-00409" />
      <option name="project" value="LOCAL" />
      <updated>1754509357800</updated>
    </task>
    <task id="LOCAL-00410" summary="Add support for semicolon-based array declaration syntax while maintaining backward compatibility with comma-based syntax, update parsing logic, and extend tests.">
      <option name="closed" value="true" />
      <created>1754509830880</created>
      <option name="number" value="00410" />
      <option name="presentableId" value="LOCAL-00410" />
      <option name="project" value="LOCAL" />
      <updated>1754509830880</updated>
    </task>
    <task id="LOCAL-00411" summary="Update character type from `Char` to `U8` across compiler, tests, and documentation to align with unified type conventions. Add `run_char_test.bat` for streamlined test execution.">
      <option name="closed" value="true" />
      <created>1754510467003</created>
      <option name="number" value="00411" />
      <option name="presentableId" value="LOCAL-00411" />
      <option name="project" value="LOCAL" />
      <updated>1754510467003</updated>
    </task>
    <task id="LOCAL-00412" summary="Add `StringTest` with unit tests for string handling in the Magma compiler, add `run_string_test.bat` for test execution, and update documentation to reflect semicolon-based array syntax.">
      <option name="closed" value="true" />
      <created>1754511830304</created>
      <option name="number" value="00412" />
      <option name="presentableId" value="LOCAL-00412" />
      <option name="project" value="LOCAL" />
      <updated>1754511830304</updated>
    </task>
    <task id="LOCAL-00413" summary="Refactor `Main.java` to simplify conditional statements and reduce nesting, extract `getDefaultTypeMapper` for clarity, and clean up `assertNotNull` assertions from unit tests.">
      <option name="closed" value="true" />
      <created>1754512136732</created>
      <option name="number" value="00413" />
      <option name="presentableId" value="LOCAL-00413" />
      <option name="project" value="LOCAL" />
      <updated>1754512136732</updated>
    </task>
    <task id="LOCAL-00414" summary="Refactor `Main.java` to use method reference in `orElseGet` for improved readability.">
      <option name="closed" value="true" />
      <created>1754512187437</created>
      <option name="number" value="00414" />
      <option name="presentableId" value="LOCAL-00414" />
      <option name="project" value="LOCAL" />
      <updated>1754512187437</updated>
    </task>
    <task id="LOCAL-00415" summary="Add support for string literals in U8 array declarations, update C code generation to handle string initializers, and extend `containsDeclarations` logic accordingly.">
      <option name="closed" value="true" />
      <created>1754512486268</created>
      <option name="number" value="00415" />
      <option name="presentableId" value="LOCAL-00415" />
      <option name="project" value="LOCAL" />
      <updated>1754512486268</updated>
    </task>
    <task id="LOCAL-00416" summary="Add comprehensive error handling tests, new batch scripts for build and test execution, and extend README with updated testing documentation.">
      <option name="closed" value="true" />
      <created>1754531822323</created>
      <option name="number" value="00416" />
      <option name="presentableId" value="LOCAL-00416" />
      <option name="project" value="LOCAL" />
      <updated>1754531822323</updated>
    </task>
    <task id="LOCAL-00417" summary="Refactor `Main.java` to streamline type suffix checking by extracting a helper method, reducing nesting, and simplifying logic.">
      <option name="closed" value="true" />
      <created>1754531915210</created>
      <option name="number" value="00417" />
      <option name="presentableId" value="LOCAL-00417" />
      <option name="project" value="LOCAL" />
      <updated>1754531915210</updated>
    </task>
    <task id="LOCAL-00418" summary="Refactor `Main.java` to rename `extracted` to `convertStringToCArrayInitializer` for clarity, extract `handleEscapeSequence` for improved modularity, and enhance string literal handling in C array code generation.">
      <option name="closed" value="true" />
      <created>1754532048328</created>
      <option name="number" value="00418" />
      <option name="presentableId" value="LOCAL-00418" />
      <option name="project" value="LOCAL" />
      <updated>1754532048328</updated>
    </task>
    <task id="LOCAL-00419" summary="Refactor `Main.java` to extract `ArrayDeclaration` and `MultiDimArrayDeclaration` into separate files for improved modularity and clarity.">
      <option name="closed" value="true" />
      <created>1754532065545</created>
      <option name="number" value="00419" />
      <option name="presentableId" value="LOCAL-00419" />
      <option name="project" value="LOCAL" />
      <updated>1754532065545</updated>
    </task>
    <option name="localTasksCounter" value="420" />
    <servers />
  </component>
  <component name="UnknownFeatures">
    <option featureType="com.intellij.fileTypeFactory" implementationName="*.ts" />
  </component>
  <component name="Vcs.Log.Tabs.Properties">
    <option name="TAB_STATES">
      <map>
        <entry key="MAIN">
          <value>
            <State />
          </value>
        </entry>
      </map>
    </option>
  </component>
  <component name="VcsManagerConfiguration">
    <option name="CHECK_CODE_CLEANUP_BEFORE_PROJECT_COMMIT_PROFILE" value="Project Default" />
    <MESSAGE value="Add type inference support for typeless variable declarations with suffix-based detection, update `compile` logic, and add `TypeInferenceTest`." />
    <MESSAGE value="Add unit tests for type inference with typeless declarations and implement value-based suffix handling in `compile`." />
    <MESSAGE value="Add type inference from value suffixes (e.g., `100U64`) in `compile`, refactor related logic, and introduce `TypeInferenceTest`." />
    <MESSAGE value="Add support for `Bool` type in `compile`, update type inference logic, include `stdbool.h` as needed, and extend tests." />
    <MESSAGE value="Update README to reflect transition from Java to Magma language, add details for new array declaration syntax, and revise supported features list. Extend compiler functionality for array declarations (`let` syntax), implement comprehensive handling in `compile`, and add tests for array handling with various types and sizes." />
    <MESSAGE value="Refactor test cases to use inline `let` declarations instead of class" />
    <MESSAGE value="Refactor test cases to use inline `let` declarations instead of class redundant `#include &lt;stdio.h&gt;` assertions, and improve assertion formatting." />
    <MESSAGE value="Add conditional `#include &lt;stdio.h&gt;` based on I/O operation presence in `magmaCode`." />
    <MESSAGE value="Remove redundant conditional `#include &lt;stdio.h&gt;` logic and refactor formatting in `generateVariableDeclarationCCode`." />
    <MESSAGE value="Remove support for `Hello World`, integer array, and string array C code generation, along with corresponding Magma pattern checks. Simplify array declaration handling in `compile`." />
    <MESSAGE value="Refactor `compile` to unify declaration handling for arrays and variables, add `containsDeclarations` method, and implement `generateDeclarationCCode`." />
    <MESSAGE value="Remove redundant array declaration handling methods and simplify `generateDeclarationCCode` logic." />
    <MESSAGE value="Remove unused methods for array and variable declaration handling, simplify and clean up `Main.java`." />
    <MESSAGE value="Add support for multi-dimensional arrays in `compile`, including parsing, C code generation, and unit tests." />
    <MESSAGE value="Refactor tests to replace `assertTrue` checks with `assertEquals` for improved clarity and reliability, and add `TestOutput.java` for char type debugging." />
    <MESSAGE value="Add support for semicolon-based array declaration syntax while maintaining backward compatibility with comma-based syntax, update parsing logic, and extend tests." />
    <MESSAGE value="Update character type from `Char` to `U8` across compiler, tests, and documentation to align with unified type conventions. Add `run_char_test.bat` for streamlined test execution." />
    <MESSAGE value="Add `StringTest` with unit tests for string handling in the Magma compiler, add `run_string_test.bat` for test execution, and update documentation to reflect semicolon-based array syntax." />
    <MESSAGE value="Refactor `Main.java` to simplify conditional statements and reduce nesting, extract `getDefaultTypeMapper` for clarity, and clean up `assertNotNull` assertions from unit tests." />
    <MESSAGE value="Refactor `Main.java` to use method reference in `orElseGet` for improved readability." />
    <MESSAGE value="Add support for string literals in U8 array declarations, update C code generation to handle string initializers, and extend `containsDeclarations` logic accordingly." />
    <MESSAGE value="Add comprehensive error handling tests, new batch scripts for build and test execution, and extend README with updated testing documentation." />
    <MESSAGE value="Refactor `Main.java` to streamline type suffix checking by extracting a helper method, reducing nesting, and simplifying logic." />
    <MESSAGE value="Refactor `Main.java` to rename `extracted` to `convertStringToCArrayInitializer` for clarity, extract `handleEscapeSequence` for improved modularity, and enhance string literal handling in C array code generation." />
    <MESSAGE value="Refactor `Main.java` to extract `ArrayDeclaration` and `MultiDimArrayDeclaration` into separate files for improved modularity and clarity." />
    <option name="LAST_COMMIT_MESSAGE" value="Refactor `Main.java` to extract `ArrayDeclaration` and `MultiDimArrayDeclaration` into separate files for improved modularity and clarity." />
  </component>
  <component name="XDebuggerManager">
    <breakpoint-manager>
      <breakpoints>
        <line-breakpoint enabled="true" type="java-method">
          <url>jar://$USER_HOME$/.jdks/openjdk-24.0.1/lib/src.zip!/java.base/java/lang/OutOfMemoryError.java</url>
          <line>46</line>
          <properties class="java.lang.OutOfMemoryError" method="&lt;init&gt;">
            <option name="EMULATED" value="true" />
            <option name="WATCH_EXIT" value="false" />
          </properties>
          <option name="timeStamp" value="22" />
        </line-breakpoint>
        <line-breakpoint enabled="true" type="java-method">
          <url>jar://$USER_HOME$/.jdks/openjdk-24.0.1/lib/src.zip!/java.base/java/lang/OutOfMemoryError.java</url>
          <line>56</line>
          <properties class="java.lang.OutOfMemoryError" method="&lt;init&gt;">
            <option name="EMULATED" value="true" />
            <option name="WATCH_EXIT" value="false" />
          </properties>
          <option name="timeStamp" value="24" />
        </line-breakpoint>
      </breakpoints>
    </breakpoint-manager>
    <pin-to-top-manager>
      <pinned-members>
        <PinnedItemInfo parentTag="java.util.HashMap$Node" memberName="key" />
        <PinnedItemInfo parentTag="magma.compile.MapNode" memberName="maybeType" />
        <PinnedItemInfo parentTag="java.util.HashMap$Node" memberName="value" />
        <PinnedItemInfo parentTag="jvm.collect.map.JavaMap" memberName="map" />
        <PinnedItemInfo parentTag="magma.option.Tuple" memberName="right" />
        <PinnedItemInfo parentTag="magma.Main$Maps$JavaMap" memberName="internalMap" />
        <PinnedItemInfo parentTag="magma.Main$StructType" memberName="properties" />
      </pinned-members>
    </pin-to-top-manager>
  </component>
</project>
<?xml version="1.0" encoding="UTF-8"?>
<project version="4">
  <component name="AnalysisUIOptions">
    <option name="ANALYZE_INJECTED_CODE" value="false" />
  </component>
  <component name="AutoImportSettings">
    <option name="autoReloadType" value="SELECTIVE" />
  </component>
  <component name="ChangeListManager">
    <list default="true" id="091cd905-c547-4179-9fb8-5e9879cce285" name="Changes" comment="Refactor `Main`: add `compileDefinition` method for enhanced field compilation, improve `compileField` logic, and clean up commented-out C source code.">
      <change beforePath="$PROJECT_DIR$/src/java/magma/Main.java" beforeDir="false" afterPath="$PROJECT_DIR$/src/java/magma/Main.java" afterDir="false" />
    </list>
    <option name="SHOW_DIALOG" value="false" />
    <option name="HIGHLIGHT_CONFLICTS" value="true" />
    <option name="HIGHLIGHT_NON_ACTIVE_CHANGELIST" value="false" />
    <option name="LAST_RESOLUTION" value="IGNORE" />
  </component>
  <component name="FileTemplateManagerImpl">
    <option name="RECENT_TEMPLATES">
      <list>
        <option value="Interface" />
        <option value="Record" />
        <option value="Class" />
      </list>
    </option>
  </component>
  <component name="Git.Settings">
    <option name="PUSH_AUTO_UPDATE" value="true" />
    <option name="RECENT_GIT_ROOT_PATH" value="$PROJECT_DIR$" />
  </component>
  <component name="GithubProjectSettings">
    <option name="branchProtectionPatterns">
      <list>
        <option value="master" />
      </list>
    </option>
  </component>
  <component name="ProblemsViewState">
    <option name="selectedTabId" value="CurrentFile" />
  </component>
  <component name="ProjectColorInfo">{
  &quot;associatedIndex&quot;: 3
}</component>
  <component name="ProjectId" id="304EoLp6ZWsUcvlOP9yXLjMrk5A" />
  <component name="ProjectLevelVcsManager">
    <OptionsSetting value="false" id="Update" />
    <ConfirmationsSetting value="2" id="Add" />
  </component>
  <component name="ProjectViewState">
    <option name="hideEmptyMiddlePackages" value="true" />
    <option name="showLibraryContents" value="true" />
  </component>
  <component name="PropertiesComponent">{
  &quot;keyToString&quot;: {
    &quot;Application.HelloWorld.executor&quot;: &quot;Run&quot;,
    &quot;Application.Main.executor&quot;: &quot;Run&quot;,
    &quot;Application.MainV2.executor&quot;: &quot;Run&quot;,
    &quot;Batch.build.executor&quot;: &quot;Run&quot;,
    &quot;Downloaded.Files.Path.Enabled&quot;: &quot;false&quot;,
    &quot;JUnit.All in Magma.executor&quot;: &quot;Run&quot;,
    &quot;JUnit.ApplicationTest.executor&quot;: &quot;Run&quot;,
    &quot;JUnit.MapNodeImmutabilityTest.testMergeReturnsNewInstance.executor&quot;: &quot;Debug&quot;,
    &quot;ModuleVcsDetector.initialDetectionPerformed&quot;: &quot;true&quot;,
    &quot;Python tests.Python tests for test_basic.test_compile_non_empty_returns_placeholder.executor&quot;: &quot;Run&quot;,
    &quot;Python tests.Python tests for test_compiler.test_compile_empty_input_creates_empty_main.executor&quot;: &quot;Run&quot;,
    &quot;Python tests.Python tests for test_compiler.test_compile_inner_function_with_inferred_declaration.executor&quot;: &quot;Run&quot;,
    &quot;Python tests.Python tests for test_misc.test_compile_class_fn_param_function_type.executor&quot;: &quot;Run&quot;,
    &quot;Python tests.Python tests in test_basic.py.executor&quot;: &quot;Run&quot;,
    &quot;Python tests.Python tests in test_compiler.py.executor&quot;: &quot;Run&quot;,
    &quot;Python tests.Python tests in test_flow.py.executor&quot;: &quot;Run&quot;,
    &quot;Python tests.Python tests in test_imports.py.executor&quot;: &quot;Run&quot;,
    &quot;Python tests.Python tests in test_misc.py.executor&quot;: &quot;Run&quot;,
    &quot;Python tests.Python tests in tests.executor&quot;: &quot;Run&quot;,
    &quot;Python tests.pytest for test_basic.test_compile_non_empty_returns_placeholder.executor&quot;: &quot;Run&quot;,
    &quot;Python.__init__.executor&quot;: &quot;Run&quot;,
    &quot;Python.utils.executor&quot;: &quot;Run&quot;,
    &quot;Repository.Attach.Annotations&quot;: &quot;false&quot;,
    &quot;Repository.Attach.JavaDocs&quot;: &quot;false&quot;,
    &quot;Repository.Attach.Sources&quot;: &quot;false&quot;,
    &quot;RunOnceActivity.ShowReadmeOnStart&quot;: &quot;true&quot;,
    &quot;RunOnceActivity.git.unshallow&quot;: &quot;true&quot;,
    &quot;git-widget-placeholder&quot;: &quot;master&quot;,
    &quot;introduce.parameter.lambda&quot;: &quot;true&quot;,
    &quot;junie.onboarding.icon.badge.shown&quot;: &quot;true&quot;,
    &quot;kotlin-language-version-configured&quot;: &quot;true&quot;,
    &quot;last_directory_selection&quot;: &quot;C:/Users/mathm/IdeaProjects/Magma/test/java&quot;,
    &quot;last_opened_file_path&quot;: &quot;C:/Users/mathm/IdeaProjects/Magma&quot;,
    &quot;onboarding.tips.debug.path&quot;: &quot;C:/Users/mathm/IdeaProjects/Magma/src/Main.java&quot;,
    &quot;project.structure.last.edited&quot;: &quot;Modules&quot;,
    &quot;project.structure.proportion&quot;: &quot;0.15044248&quot;,
    &quot;project.structure.side.proportion&quot;: &quot;0.2&quot;,
    &quot;run.code.analysis.last.selected.profile&quot;: &quot;pProject Default&quot;,
    &quot;settings.editor.selected.configurable&quot;: &quot;project.propCompiler&quot;,
    &quot;to.speed.mode.migration.done&quot;: &quot;true&quot;
  }
}</component>
  <component name="RecentsManager">
    <key name="CreateClassDialog.RecentsKey">
      <recent name="magma" />
      <recent name="magma.error" />
      <recent name="magma.rule" />
      <recent name="magma.node" />
    </key>
    <key name="MoveFile.RECENT_KEYS">
      <recent name="C:\Users\mathm\IdeaProjects\Magma\src\java" />
      <recent name="C:\Users\mathm\IdeaProjects\Magma\.venv" />
    </key>
    <key name="MoveMembersDialog.RECENTS_KEY">
      <recent name="magma.Application" />
      <recent name="magma.ApplicationTest" />
      <recent name="magma.Lang" />
      <recent name="magma.DivideRule" />
      <recent name="magma.rule.InfixRule" />
    </key>
    <key name="ExtractSuperBase.RECENT_KEYS">
      <recent name="magma.node" />
      <recent name="magma" />
      <recent name="magma.divide" />
    </key>
    <key name="MoveClassesOrPackagesDialog.RECENTS_KEY">
      <recent name="magma.result" />
      <recent name="magma" />
      <recent name="magma.rule.divide" />
      <recent name="magma.node" />
      <recent name="magma.rule" />
    </key>
    <key name="MoveInnerDialog.RECENTS_KEY">
      <recent name="magma" />
      <recent name="magma.node" />
      <recent name="" />
    </key>
  </component>
  <component name="RunManager" selected="Application.Main">
    <configuration name="Main" type="Application" factoryName="Application" temporary="true" nameIsGenerated="true">
      <option name="MAIN_CLASS_NAME" value="magma.Main" />
      <module name="Magma" />
      <extension name="coverage">
        <pattern>
          <option name="PATTERN" value="magma.result.*" />
          <option name="ENABLED" value="true" />
        </pattern>
      </extension>
      <method v="2">
        <option name="Make" enabled="true" />
      </method>
    </configuration>
    <configuration name="ApplicationTest" type="JUnit" factoryName="JUnit" temporary="true" nameIsGenerated="true">
      <module name="Magma" />
      <extension name="coverage">
        <pattern>
          <option name="PATTERN" value="magma.result.*" />
          <option name="ENABLED" value="true" />
        </pattern>
      </extension>
      <option name="PACKAGE_NAME" value="magma" />
      <option name="MAIN_CLASS_NAME" value="magma.ApplicationTest" />
      <option name="TEST_OBJECT" value="class" />
      <method v="2">
        <option name="Make" enabled="true" />
      </method>
    </configuration>
    <configuration default="true" type="JetRunConfigurationType">
      <method v="2">
        <option name="Make" enabled="true" />
      </method>
    </configuration>
    <configuration default="true" type="KotlinStandaloneScriptRunConfigurationType">
      <option name="filePath" />
      <method v="2" />
    </configuration>
    <recent_temporary>
      <list>
        <item itemvalue="Application.Main" />
        <item itemvalue="JUnit.ApplicationTest" />
      </list>
    </recent_temporary>
  </component>
  <component name="SpellCheckerSettings" RuntimeDictionaries="0" Folders="0" CustomDictionaries="0" DefaultDictionary="application-level" UseSingleDictionary="true" transferred="true" />
  <component name="TaskManager">
    <task active="true" id="Default" summary="Default task">
      <changelist id="091cd905-c547-4179-9fb8-5e9879cce285" name="Changes" comment="Delete everything! This is a hard reset!" />
      <created>1752878619782</created>
      <option name="number" value="Default" />
      <option name="presentableId" value="Default" />
      <updated>1752878619782</updated>
    </task>
    <task id="LOCAL-00163" summary="Rebio;d">
      <option name="closed" value="true" />
      <created>1753998174379</created>
      <option name="number" value="00163" />
      <option name="presentableId" value="LOCAL-00163" />
      <option name="project" value="LOCAL" />
      <updated>1753998174379</updated>
    </task>
    <task id="LOCAL-00164" summary="Rebuild">
      <option name="closed" value="true" />
      <created>1753998178306</created>
      <option name="number" value="00164" />
      <option name="presentableId" value="LOCAL-00164" />
      <option name="project" value="LOCAL" />
      <updated>1753998178306</updated>
    </task>
    <task id="LOCAL-00165" summary="Refactor `MapNode` to use `Optional` for `typeTag`, enhancing null safety and readability. Clean up logging and error handling in `Main` for improved clarity and consistency.">
      <option name="closed" value="true" />
      <created>1753998716603</created>
      <option name="number" value="00165" />
      <option name="presentableId" value="LOCAL-00165" />
      <option name="project" value="LOCAL" />
      <updated>1753998716603</updated>
    </task>
    <task id="LOCAL-00166" summary="Add `Result.and` method for combining Ok values into Tuples, refactor `NodeListRule` for clarity and functional style, and clean up `Result` interface with consistent function references. Remove TypeScript files.">
      <option name="closed" value="true" />
      <created>1753999496157</created>
      <option name="number" value="00166" />
      <option name="presentableId" value="LOCAL-00166" />
      <option name="project" value="LOCAL" />
      <updated>1753999496157</updated>
    </task>
    <task id="LOCAL-00167" summary="Remove `PlaceholderRule` and its references; refactor related logic for simplicity and clarity.">
      <option name="closed" value="true" />
      <created>1753999723022</created>
      <option name="number" value="00167" />
      <option name="presentableId" value="LOCAL-00167" />
      <option name="project" value="LOCAL" />
      <updated>1753999723022</updated>
    </task>
    <task id="LOCAL-00168" summary="Refactor `MapNode` for improved clarity: replace `MapProperties` with `Properties` and update string concatenation logic in `display` method.">
      <option name="closed" value="true" />
      <created>1753999832515</created>
      <option name="number" value="00168" />
      <option name="presentableId" value="LOCAL-00168" />
      <option name="project" value="LOCAL" />
      <updated>1753999832515</updated>
    </task>
    <task id="LOCAL-00169" summary="Add immutability support for `MapNode` and `MapProperties`; refactor related tests and interfaces for consistency and clarity.">
      <option name="closed" value="true" />
      <created>1754000242967</created>
      <option name="number" value="00169" />
      <option name="presentableId" value="LOCAL-00169" />
      <option name="project" value="LOCAL" />
      <updated>1754000242967</updated>
    </task>
    <task id="LOCAL-00170" summary="Refactor `MapNodeImmutabilityTest` for consistency: use `final` modifiers, simplify assertions, and enhance readability; sort properties in `MapNode` display logic.">
      <option name="closed" value="true" />
      <created>1754000428149</created>
      <option name="number" value="00170" />
      <option name="presentableId" value="LOCAL-00170" />
      <option name="project" value="LOCAL" />
      <updated>1754000428149</updated>
    </task>
    <task id="LOCAL-00171" summary="Add comprehensive Javadoc comments across core classes to improve documentation and clarify functionality.">
      <option name="closed" value="true" />
      <created>1754008899478</created>
      <option name="number" value="00171" />
      <option name="presentableId" value="LOCAL-00171" />
      <option name="project" value="LOCAL" />
      <updated>1754008899478</updated>
    </task>
    <task id="LOCAL-00172" summary="Refactor for clarity and consistency: improve formatting, streamline conditional statements, and enhance readability across multiple classes and methods.">
      <option name="closed" value="true" />
      <created>1754009301199</created>
      <option name="number" value="00172" />
      <option name="presentableId" value="LOCAL-00172" />
      <option name="project" value="LOCAL" />
      <updated>1754009301199</updated>
    </task>
    <task id="LOCAL-00173" summary="Refactor for readability and consistency: split statements across `PrefixRule`, `SuffixRule`, and `MapNode` for improved formatting and clearer conditional logic.">
      <option name="closed" value="true" />
      <created>1754009326651</created>
      <option name="number" value="00173" />
      <option name="presentableId" value="LOCAL-00173" />
      <option name="project" value="LOCAL" />
      <updated>1754009326651</updated>
    </task>
    <task id="LOCAL-00174" summary="Refactor tests for readability and consistency: split chained statements across `MapNodeImmutabilityTest` and `MapNodeDisplayTest` to improve formatting and enhance clarity.">
      <option name="closed" value="true" />
      <created>1754011657408</created>
      <option name="number" value="00174" />
      <option name="presentableId" value="LOCAL-00174" />
      <option name="project" value="LOCAL" />
      <updated>1754011657408</updated>
    </task>
    <task id="LOCAL-00175" summary="Introduce `Input` abstraction for enhanced flexibility and error handling; refactor rules to use `Input` instead of `String` and implement `StringInput` as a concrete `Input` source.">
      <option name="closed" value="true" />
      <created>1754011809236</created>
      <option name="number" value="00175" />
      <option name="presentableId" value="LOCAL-00175" />
      <option name="project" value="LOCAL" />
      <updated>1754011809236</updated>
    </task>
    <task id="LOCAL-00176" summary="Add `RuleTest` and `StringInputTest` for comprehensive test coverage; enhance `Input` with slicing logic and refactor `Rule` implementations for improved error handling and modularity.">
      <option name="closed" value="true" />
      <created>1754012513387</created>
      <option name="number" value="00176" />
      <option name="presentableId" value="LOCAL-00176" />
      <option name="project" value="LOCAL" />
      <updated>1754012513387</updated>
    </task>
    <task id="LOCAL-00177" summary="Add position tracking to `StringInput` for detailed source indexing; update `Rule` implementations and tests to utilize enhanced input capabilities.">
      <option name="closed" value="true" />
      <created>1754012781188</created>
      <option name="number" value="00177" />
      <option name="presentableId" value="LOCAL-00177" />
      <option name="project" value="LOCAL" />
      <updated>1754012781188</updated>
    </task>
    <task id="LOCAL-00178" summary="Add `InputContext` and `prettyPrint` support to enhance input error reporting; refactor `CompileError` to use `Input` abstraction and update related tests.">
      <option name="closed" value="true" />
      <created>1754013168391</created>
      <option name="number" value="00178" />
      <option name="presentableId" value="LOCAL-00178" />
      <option name="project" value="LOCAL" />
      <updated>1754013168391</updated>
    </task>
    <task id="LOCAL-00179" summary="Refactor `MutableDivideState` and `DivideState` to use `Input` abstraction; update methods, interfaces, and Javadoc; enhance `StringInput` with cloning, windowing, and content extension functionality.">
      <option name="closed" value="true" />
      <created>1754014195626</created>
      <option name="number" value="00179" />
      <option name="presentableId" value="LOCAL-00179" />
      <option name="project" value="LOCAL" />
      <updated>1754014195626</updated>
    </task>
    <task id="LOCAL-00180" summary="Introduce `Input` hierarchy to encapsulate string slicing and position tracking. Add `AbstractInput`, `RootInput`, and `WindowInput` as reusable implementations. Refactor all usages of `StringInput` to leverage the new abstraction; update related tests and ensure compatibility.">
      <option name="closed" value="true" />
      <created>1754014827673</created>
      <option name="number" value="00180" />
      <option name="presentableId" value="LOCAL-00180" />
      <option name="project" value="LOCAL" />
      <updated>1754014827674</updated>
    </task>
    <task id="LOCAL-00181" summary="Replace `StringInput` with `Location` to represent source metadata and improve encapsulation. Refactor the `Input` hierarchy, including `AbstractInput`, `RootInput`, and `WindowInput`, to leverage `Location`. Update related classes, tests, and methods for consistency and extended functionality.">
      <option name="closed" value="true" />
      <created>1754015732092</created>
      <option name="number" value="00181" />
      <option name="presentableId" value="LOCAL-00181" />
      <option name="project" value="LOCAL" />
      <updated>1754015732092</updated>
    </task>
    <task id="LOCAL-00182" summary="Delete">
      <option name="closed" value="true" />
      <created>1754054680625</created>
      <option name="number" value="00182" />
      <option name="presentableId" value="LOCAL-00182" />
      <option name="project" value="LOCAL" />
      <updated>1754054680625</updated>
    </task>
    <task id="LOCAL-00183" summary="Add IntelliJ IDEA project configuration files to version control.">
      <option name="closed" value="true" />
      <created>1754054697566</created>
      <option name="number" value="00183" />
      <option name="presentableId" value="LOCAL-00183" />
      <option name="project" value="LOCAL" />
      <updated>1754054697566</updated>
    </task>
    <task id="LOCAL-00184" summary="Add IntelliJ IDEA project configuration files to version control.">
      <option name="closed" value="true" />
      <created>1754055148920</created>
      <option name="number" value="00184" />
      <option name="presentableId" value="LOCAL-00184" />
      <option name="project" value="LOCAL" />
      <updated>1754055148920</updated>
    </task>
    <task id="LOCAL-00185" summary="Refactor `ApplicationTest` to add file existence tests and cleanup logic. Update `.idea/workspace.xml` with new task entry.">
      <option name="closed" value="true" />
      <created>1754055453821</created>
      <option name="number" value="00185" />
      <option name="presentableId" value="LOCAL-00185" />
      <option name="project" value="LOCAL" />
      <updated>1754055453821</updated>
    </task>
    <task id="LOCAL-00186" summary="Refactor `ApplicationTest` to simplify test logic: replace `run(Path)` with `run()`, adjust method signatures, and improve file existence checks.">
      <option name="closed" value="true" />
      <created>1754055519431</created>
      <option name="number" value="00186" />
      <option name="presentableId" value="LOCAL-00186" />
      <option name="project" value="LOCAL" />
      <updated>1754055519431</updated>
    </task>
    <task id="LOCAL-00187" summary="Huhk">
      <option name="closed" value="true" />
      <created>1754055542822</created>
      <option name="number" value="00187" />
      <option name="presentableId" value="LOCAL-00187" />
      <option name="project" value="LOCAL" />
      <updated>1754055542822</updated>
    </task>
    <task id="LOCAL-00188" summary="Reformat?">
      <option name="closed" value="true" />
      <created>1754055547354</created>
      <option name="number" value="00188" />
      <option name="presentableId" value="LOCAL-00188" />
      <option name="project" value="LOCAL" />
      <updated>1754055547354</updated>
    </task>
    <task id="LOCAL-00189" summary="Refactor `ApplicationTest`: rename `run()` to `tryRun()`, extract `run(Path)` for better code reuse, and adjust tests accordingly.">
      <option name="closed" value="true" />
      <created>1754055653785</created>
      <option name="number" value="00189" />
      <option name="presentableId" value="LOCAL-00189" />
      <option name="project" value="LOCAL" />
      <updated>1754055653785</updated>
    </task>
    <task id="LOCAL-00190" summary="Refactor `ApplicationTest`: replace `try-catch` with `Optional` handling for cleaner error propagation, extract `createFile()` utility, and update `run()` signature for improved code clarity and reuse.">
      <option name="closed" value="true" />
      <created>1754055720993</created>
      <option name="number" value="00190" />
      <option name="presentableId" value="LOCAL-00190" />
      <option name="project" value="LOCAL" />
      <updated>1754055720993</updated>
    </task>
    <task id="LOCAL-00191" summary="Introduce `Application` class: encapsulate file handling logic, extract `createFile()` utility, and simplify error propagation with `Optional`.">
      <option name="closed" value="true" />
      <created>1754055772725</created>
      <option name="number" value="00191" />
      <option name="presentableId" value="LOCAL-00191" />
      <option name="project" value="LOCAL" />
      <updated>1754055772725</updated>
    </task>
    <task id="LOCAL-00192" summary="Add `Result` interface with `Ok` and `Err` implementations to encapsulate success/failure states. Update `Application` to use `Result` for file operations, simplifying error handling and improving clarity. Adjust related tests accordingly.">
      <option name="closed" value="true" />
      <created>1754056780294</created>
      <option name="number" value="00192" />
      <option name="presentableId" value="LOCAL-00192" />
      <option name="project" value="LOCAL" />
      <updated>1754056780294</updated>
    </task>
    <task id="LOCAL-00193" summary="Introduce `Error` interface with `CompileError` and `ThrowableError` implementations to standardize error handling. Update `Application` and tests to use `Error` for improved readability and consistency.">
      <option name="closed" value="true" />
      <created>1754058164341</created>
      <option name="number" value="00193" />
      <option name="presentableId" value="LOCAL-00193" />
      <option name="project" value="LOCAL" />
      <updated>1754058164342</updated>
    </task>
    <task id="LOCAL-00194" summary="Change `writeString` parameter type from `String` to `CharSequence` for enhanced flexibility.">
      <option name="closed" value="true" />
      <created>1754058184503</created>
      <option name="number" value="00194" />
      <option name="presentableId" value="LOCAL-00194" />
      <option name="project" value="LOCAL" />
      <updated>1754058184503</updated>
    </task>
    <task id="LOCAL-00195" summary="Refactor `Application`: simplify `run()` by introducing `compileAndWrite` helper, improving modularity and error handling.">
      <option name="closed" value="true" />
      <created>1754058303969</created>
      <option name="number" value="00195" />
      <option name="presentableId" value="LOCAL-00195" />
      <option name="project" value="LOCAL" />
      <updated>1754058303969</updated>
    </task>
    <task id="LOCAL-00196" summary="Nuke">
      <option name="closed" value="true" />
      <created>1754072003613</created>
      <option name="number" value="00196" />
      <option name="presentableId" value="LOCAL-00196" />
      <option name="project" value="LOCAL" />
      <updated>1754072003613</updated>
    </task>
    <task id="LOCAL-00197" summary="Main">
      <option name="closed" value="true" />
      <created>1754072064382</created>
      <option name="number" value="00197" />
      <option name="presentableId" value="LOCAL-00197" />
      <option name="project" value="LOCAL" />
      <updated>1754072064382</updated>
    </task>
    <task id="LOCAL-00198" summary="Extend `Main` to copy its source to C equivalent, update `RunManager` configuration.">
      <option name="closed" value="true" />
      <created>1754072229260</created>
      <option name="number" value="00198" />
      <option name="presentableId" value="LOCAL-00198" />
      <option name="project" value="LOCAL" />
      <updated>1754072229260</updated>
    </task>
    <task id="LOCAL-00199" summary="Refactor `Main`: introduce `divide` and `generatePlaceholder` methods for modularized string processing and improved readability. Update code to handle source-to-C conversion with segmented placeholders.">
      <option name="closed" value="true" />
      <created>1754072318320</created>
      <option name="number" value="00199" />
      <option name="presentableId" value="LOCAL-00199" />
      <option name="project" value="LOCAL" />
      <updated>1754072318320</updated>
    </task>
    <task id="LOCAL-00200" summary="Refactor `Main`: replace `generatePlaceholder` with `compileRootSegment`, enhance modularity by introducing a helper for segment compilation, and improve handling of package declarations.">
      <option name="closed" value="true" />
      <created>1754072366104</created>
      <option name="number" value="00200" />
      <option name="presentableId" value="LOCAL-00200" />
      <option name="project" value="LOCAL" />
      <updated>1754072366104</updated>
    </task>
    <task id="LOCAL-00201" summary="Refactor `Main`: update `compileRootSegment` to exclude both `package` and `import` declarations, clean up unused commented code in C source.">
      <option name="closed" value="true" />
      <created>1754072389754</created>
      <option name="number" value="00201" />
      <option name="presentableId" value="LOCAL-00201" />
      <option name="project" value="LOCAL" />
      <updated>1754072389754</updated>
    </task>
    <task id="LOCAL-00202" summary="Refactor `Main`: introduce `State` class to modularize segment processing, enhance `divide` with block-level awareness, and clean up C source comments.">
      <option name="closed" value="true" />
      <created>1754072632722</created>
      <option name="number" value="00202" />
      <option name="presentableId" value="LOCAL-00202" />
      <option name="project" value="LOCAL" />
      <updated>1754072632722</updated>
    </task>
    <task id="LOCAL-00203" summary="Refactor `Main`: enhance `compileRootSegment` with `compileRootSegmentValue` and `compileClass` helpers for improved modularity and class handling in Java-to-C conversion.">
      <option name="closed" value="true" />
      <created>1754072819914</created>
      <option name="number" value="00203" />
      <option name="presentableId" value="LOCAL-00203" />
      <option name="project" value="LOCAL" />
      <updated>1754072819914</updated>
    </task>
    <task id="LOCAL-00204" summary="Rebuild">
      <option name="closed" value="true" />
      <created>1754072834086</created>
      <option name="number" value="00204" />
      <option name="presentableId" value="LOCAL-00204" />
      <option name="project" value="LOCAL" />
      <updated>1754072834086</updated>
    </task>
    <task id="LOCAL-00205" summary="Refactor `Main`: standardize empty struct formatting in Java-to-C conversion and clean up C source comments.">
      <option name="closed" value="true" />
      <created>1754072886814</created>
      <option name="number" value="00205" />
      <option name="presentableId" value="LOCAL-00205" />
      <option name="project" value="LOCAL" />
      <updated>1754072886814</updated>
    </task>
    <task id="LOCAL-00206" summary="Refactor `Main`: extract `compile` and `compileStatements` methods for improved readability and modularity; enhance `divide` with depth awareness.">
      <option name="closed" value="true" />
      <created>1754073039914</created>
      <option name="number" value="00206" />
      <option name="presentableId" value="LOCAL-00206" />
      <option name="project" value="LOCAL" />
      <updated>1754073039914</updated>
    </task>
    <task id="LOCAL-00207" summary="Refactor `Main`: extract `compileClassSegmentValue` for improved modularity, standardize struct formatting, and clean up commented-out code in C source. Inner structs.">
      <option name="closed" value="true" />
      <created>1754073133206</created>
      <option name="number" value="00207" />
      <option name="presentableId" value="LOCAL-00207" />
      <option name="project" value="LOCAL" />
      <updated>1754073133206</updated>
    </task>
    <task id="LOCAL-00208" summary="Refactor `Main`: enhance modularity by introducing `ParseState` and `Tuple` records, improve `compile` with streamlined structure gathering, and refine `divide` with `DivideState` updates. Clean up C source.">
      <option name="closed" value="true" />
      <created>1754073652619</created>
      <option name="number" value="00208" />
      <option name="presentableId" value="LOCAL-00208" />
      <option name="project" value="LOCAL" />
      <updated>1754073652619</updated>
    </task>
    <task id="LOCAL-00209" summary="Refactor `Main`: enhance `compileClassSegmentValue` handling with `compileField` helper, improve `struct` formatting with line breaks, and clean up commented-out C source code.">
      <option name="closed" value="true" />
      <created>1754073815936</created>
      <option name="number" value="00209" />
      <option name="presentableId" value="LOCAL-00209" />
      <option name="project" value="LOCAL" />
      <updated>1754073815936</updated>
    </task>
    <task id="LOCAL-00210" summary="Refactor `Main`: introduce function tracking in `ParseState`, add `generateConstructor` method, improve `compile` logic for struct and function integration, and clean up commented-out C source code.">
      <option name="closed" value="true" />
      <created>1754074234893</created>
      <option name="number" value="00210" />
      <option name="presentableId" value="LOCAL-00210" />
      <option name="project" value="LOCAL" />
      <updated>1754074234893</updated>
    </task>
    <task id="LOCAL-00211" summary="Refactor `Main`: add `compileDefinition` method for enhanced field compilation, improve `compileField` logic, and clean up commented-out C source code.">
      <option name="closed" value="true" />
      <created>1754074683556</created>
      <option name="number" value="00211" />
      <option name="presentableId" value="LOCAL-00211" />
      <option name="project" value="LOCAL" />
      <updated>1754074683556</updated>
    </task>
    <option name="localTasksCounter" value="212" />
    <servers />
  </component>
  <component name="UnknownFeatures">
    <option featureType="com.intellij.fileTypeFactory" implementationName="*.ts" />
  </component>
  <component name="Vcs.Log.Tabs.Properties">
    <option name="TAB_STATES">
      <map>
        <entry key="MAIN">
          <value>
            <State />
          </value>
        </entry>
      </map>
    </option>
  </component>
  <component name="VcsManagerConfiguration">
    <option name="CHECK_CODE_CLEANUP_BEFORE_PROJECT_COMMIT_PROFILE" value="Project Default" />
    <MESSAGE value="Huhk" />
    <MESSAGE value="Reformat?" />
    <MESSAGE value="Refactor `ApplicationTest`: rename `run()` to `tryRun()`, extract `run(Path)` for better code reuse, and adjust tests accordingly." />
    <MESSAGE value="Refactor `ApplicationTest`: replace `try-catch` with `Optional` handling for cleaner error propagation, extract `createFile()` utility, and update `run()` signature for improved code clarity and reuse." />
    <MESSAGE value="Introduce `Application` class: encapsulate file handling logic, extract `createFile()` utility, and simplify error propagation with `Optional`." />
    <MESSAGE value="Add `Result` interface with `Ok` and `Err` implementations to encapsulate success/failure states. Update `Application` to use `Result` for file operations, simplifying error handling and improving clarity. Adjust related tests accordingly." />
    <MESSAGE value="Introduce `Error` interface with `CompileError` and `ThrowableError` implementations to standardize error handling. Update `Application` and tests to use `Error` for improved readability and consistency." />
    <MESSAGE value="Change `writeString` parameter type from `String` to `CharSequence` for enhanced flexibility." />
    <MESSAGE value="Refactor `Application`: simplify `run()` by introducing `compileAndWrite` helper, improving modularity and error handling." />
    <MESSAGE value="Nuke" />
    <MESSAGE value="Main" />
    <MESSAGE value="Extend `Main` to copy its source to C equivalent, update `RunManager` configuration." />
    <MESSAGE value="Refactor `Main`: introduce `divide` and `generatePlaceholder` methods for modularized string processing and improved readability. Update code to handle source-to-C conversion with segmented placeholders." />
    <MESSAGE value="Refactor `Main`: replace `generatePlaceholder` with `compileRootSegment`, enhance modularity by introducing a helper for segment compilation, and improve handling of package declarations." />
    <MESSAGE value="Refactor `Main`: update `compileRootSegment` to exclude both `package` and `import` declarations, clean up unused commented code in C source." />
    <MESSAGE value="Refactor `Main`: introduce `State` class to modularize segment processing, enhance `divide` with block-level awareness, and clean up C source comments." />
    <MESSAGE value="Refactor `Main`: enhance `compileRootSegment` with `compileRootSegmentValue` and `compileClass` helpers for improved modularity and class handling in Java-to-C conversion." />
    <MESSAGE value="Rebuild" />
    <MESSAGE value="Refactor `Main`: standardize empty struct formatting in Java-to-C conversion and clean up C source comments." />
    <MESSAGE value="Refactor `Main`: extract `compile` and `compileStatements` methods for improved readability and modularity; enhance `divide` with depth awareness." />
    <MESSAGE value="Refactor `Main`: extract `compileClassSegmentValue` for improved modularity, standardize struct formatting, and clean up commented-out code in C source. Inner structs." />
    <MESSAGE value="Refactor `Main`: enhance modularity by introducing `ParseState` and `Tuple` records, improve `compile` with streamlined structure gathering, and refine `divide` with `DivideState` updates. Clean up C source." />
    <MESSAGE value="Refactor `Main`: enhance `compileClassSegmentValue` handling with `compileField` helper, improve `struct` formatting with line breaks, and clean up commented-out C source code." />
    <MESSAGE value="Refactor `Main`: introduce function tracking in `ParseState`, add `generateConstructor` method, improve `compile` logic for struct and function integration, and clean up commented-out C source code." />
    <MESSAGE value="Refactor `Main`: add `compileDefinition` method for enhanced field compilation, improve `compileField` logic, and clean up commented-out C source code." />
    <option name="LAST_COMMIT_MESSAGE" value="Refactor `Main`: add `compileDefinition` method for enhanced field compilation, improve `compileField` logic, and clean up commented-out C source code." />
  </component>
  <component name="XDebuggerManager">
    <pin-to-top-manager>
      <pinned-members>
        <PinnedItemInfo parentTag="java.util.HashMap$Node" memberName="key" />
        <PinnedItemInfo parentTag="magma.compile.MapNode" memberName="maybeType" />
        <PinnedItemInfo parentTag="java.util.HashMap$Node" memberName="value" />
        <PinnedItemInfo parentTag="jvm.collect.map.JavaMap" memberName="map" />
        <PinnedItemInfo parentTag="magma.option.Tuple" memberName="right" />
        <PinnedItemInfo parentTag="magma.Main$Maps$JavaMap" memberName="internalMap" />
        <PinnedItemInfo parentTag="magma.Main$StructType" memberName="properties" />
      </pinned-members>
    </pin-to-top-manager>
  </component>
</project>
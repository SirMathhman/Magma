<?xml version="1.0" encoding="UTF-8"?>
<project version="4">
  <component name="AnalysisUIOptions">
    <option name="ANALYZE_INJECTED_CODE" value="false" />
  </component>
  <component name="AutoImportSettings">
    <option name="autoReloadType" value="SELECTIVE" />
  </component>
  <component name="ChangeListManager">
    <list default="true" id="091cd905-c547-4179-9fb8-5e9879cce285" name="Changes" comment="Refactor `Main`: introduce `Type` interface and its implementations (`Ref`, `StructType`, `Placeholder`, `Primitive`), replace `String` with `Type` in `ParseState` and related methods, monomorphize types more effectively, and align Java and C logic for enhanced type generation.">
      <change beforePath="$PROJECT_DIR$/src/java/magma/Main.java" beforeDir="false" afterPath="$PROJECT_DIR$/src/java/magma/Main.java" afterDir="false" />
    </list>
    <option name="SHOW_DIALOG" value="false" />
    <option name="HIGHLIGHT_CONFLICTS" value="true" />
    <option name="HIGHLIGHT_NON_ACTIVE_CHANGELIST" value="false" />
    <option name="LAST_RESOLUTION" value="IGNORE" />
  </component>
  <component name="FileTemplateManagerImpl">
    <option name="RECENT_TEMPLATES">
      <list>
        <option value="Interface" />
        <option value="Record" />
        <option value="Class" />
      </list>
    </option>
  </component>
  <component name="Git.Settings">
    <option name="PUSH_AUTO_UPDATE" value="true" />
    <option name="RECENT_GIT_ROOT_PATH" value="$PROJECT_DIR$" />
  </component>
  <component name="GithubProjectSettings">
    <option name="branchProtectionPatterns">
      <list>
        <option value="master" />
      </list>
    </option>
  </component>
  <component name="ProblemsViewState">
    <option name="selectedTabId" value="CurrentFile" />
  </component>
  <component name="ProjectColorInfo">{
  &quot;associatedIndex&quot;: 3
}</component>
  <component name="ProjectId" id="304EoLp6ZWsUcvlOP9yXLjMrk5A" />
  <component name="ProjectLevelVcsManager">
    <OptionsSetting value="false" id="Update" />
    <ConfirmationsSetting value="2" id="Add" />
  </component>
  <component name="ProjectViewState">
    <option name="hideEmptyMiddlePackages" value="true" />
    <option name="showLibraryContents" value="true" />
  </component>
  <component name="PropertiesComponent"><![CDATA[{
  "keyToString": {
    "Application.HelloWorld.executor": "Run",
    "Application.Main.executor": "Debug",
    "Application.MainV2.executor": "Run",
    "Batch.build.executor": "Run",
    "Downloaded.Files.Path.Enabled": "false",
    "JUnit.All in Magma.executor": "Run",
    "JUnit.ApplicationTest.executor": "Run",
    "JUnit.MapNodeImmutabilityTest.testMergeReturnsNewInstance.executor": "Debug",
    "ModuleVcsDetector.initialDetectionPerformed": "true",
    "Python tests.Python tests for test_basic.test_compile_non_empty_returns_placeholder.executor": "Run",
    "Python tests.Python tests for test_compiler.test_compile_empty_input_creates_empty_main.executor": "Run",
    "Python tests.Python tests for test_compiler.test_compile_inner_function_with_inferred_declaration.executor": "Run",
    "Python tests.Python tests for test_misc.test_compile_class_fn_param_function_type.executor": "Run",
    "Python tests.Python tests in test_basic.py.executor": "Run",
    "Python tests.Python tests in test_compiler.py.executor": "Run",
    "Python tests.Python tests in test_flow.py.executor": "Run",
    "Python tests.Python tests in test_imports.py.executor": "Run",
    "Python tests.Python tests in test_misc.py.executor": "Run",
    "Python tests.Python tests in tests.executor": "Run",
    "Python tests.pytest for test_basic.test_compile_non_empty_returns_placeholder.executor": "Run",
    "Python.__init__.executor": "Run",
    "Python.utils.executor": "Run",
    "Repository.Attach.Annotations": "false",
    "Repository.Attach.JavaDocs": "false",
    "Repository.Attach.Sources": "false",
    "RunOnceActivity.ShowReadmeOnStart": "true",
    "RunOnceActivity.git.unshallow": "true",
    "git-widget-placeholder": "master",
    "introduce.parameter.lambda": "true",
    "junie.onboarding.icon.badge.shown": "true",
    "kotlin-language-version-configured": "true",
    "last_directory_selection": "C:/Users/mathm/IdeaProjects/Magma/test/java",
    "last_opened_file_path": "C:/Users/mathm/IdeaProjects/Magma",
    "onboarding.tips.debug.path": "C:/Users/mathm/IdeaProjects/Magma/src/Main.java",
    "project.structure.last.edited": "Modules",
    "project.structure.proportion": "0.15044248",
    "project.structure.side.proportion": "0.2",
    "run.code.analysis.last.selected.profile": "pProject Default",
    "settings.editor.selected.configurable": "project.propCompiler",
    "to.speed.mode.migration.done": "true"
  }
}]]></component>
  <component name="RecentsManager">
    <key name="CreateClassDialog.RecentsKey">
      <recent name="magma" />
      <recent name="magma.error" />
      <recent name="magma.rule" />
      <recent name="magma.node" />
    </key>
    <key name="MoveFile.RECENT_KEYS">
      <recent name="C:\Users\mathm\IdeaProjects\Magma\src\java" />
      <recent name="C:\Users\mathm\IdeaProjects\Magma\.venv" />
    </key>
    <key name="MoveMembersDialog.RECENTS_KEY">
      <recent name="magma.Main.Lists" />
      <recent name="magma.Application" />
      <recent name="magma.ApplicationTest" />
      <recent name="magma.Lang" />
      <recent name="magma.DivideRule" />
    </key>
    <key name="ExtractSuperBase.RECENT_KEYS">
      <recent name="magma.node" />
      <recent name="magma" />
      <recent name="magma.divide" />
    </key>
    <key name="MoveClassesOrPackagesDialog.RECENTS_KEY">
      <recent name="magma.result" />
      <recent name="magma" />
      <recent name="magma.rule.divide" />
      <recent name="magma.node" />
      <recent name="magma.rule" />
    </key>
    <key name="MoveInnerDialog.RECENTS_KEY">
      <recent name="magma" />
      <recent name="magma.node" />
      <recent name="" />
    </key>
  </component>
  <component name="RunManager" selected="Application.Main">
    <configuration name="Main" type="Application" factoryName="Application" temporary="true" nameIsGenerated="true">
      <option name="MAIN_CLASS_NAME" value="magma.Main" />
      <module name="Magma" />
      <extension name="coverage">
        <pattern>
          <option name="PATTERN" value="magma.result.*" />
          <option name="ENABLED" value="true" />
        </pattern>
      </extension>
      <method v="2">
        <option name="Make" enabled="true" />
      </method>
    </configuration>
    <configuration name="ApplicationTest" type="JUnit" factoryName="JUnit" temporary="true" nameIsGenerated="true">
      <module name="Magma" />
      <extension name="coverage">
        <pattern>
          <option name="PATTERN" value="magma.result.*" />
          <option name="ENABLED" value="true" />
        </pattern>
      </extension>
      <option name="PACKAGE_NAME" value="magma" />
      <option name="MAIN_CLASS_NAME" value="magma.ApplicationTest" />
      <option name="TEST_OBJECT" value="class" />
      <method v="2">
        <option name="Make" enabled="true" />
      </method>
    </configuration>
    <configuration default="true" type="JetRunConfigurationType">
      <method v="2">
        <option name="Make" enabled="true" />
      </method>
    </configuration>
    <configuration default="true" type="KotlinStandaloneScriptRunConfigurationType">
      <option name="filePath" />
      <method v="2" />
    </configuration>
    <recent_temporary>
      <list>
        <item itemvalue="Application.Main" />
        <item itemvalue="JUnit.ApplicationTest" />
      </list>
    </recent_temporary>
  </component>
  <component name="SpellCheckerSettings" RuntimeDictionaries="0" Folders="0" CustomDictionaries="0" DefaultDictionary="application-level" UseSingleDictionary="true" transferred="true" />
  <component name="TaskManager">
    <task active="true" id="Default" summary="Default task">
      <changelist id="091cd905-c547-4179-9fb8-5e9879cce285" name="Changes" comment="Delete everything! This is a hard reset!" />
      <created>1752878619782</created>
      <option name="number" value="Default" />
      <option name="presentableId" value="Default" />
      <updated>1752878619782</updated>
    </task>
    <task id="LOCAL-00184" summary="Add IntelliJ IDEA project configuration files to version control.">
      <option name="closed" value="true" />
      <created>1754055148920</created>
      <option name="number" value="00184" />
      <option name="presentableId" value="LOCAL-00184" />
      <option name="project" value="LOCAL" />
      <updated>1754055148920</updated>
    </task>
    <task id="LOCAL-00185" summary="Refactor `ApplicationTest` to add file existence tests and cleanup logic. Update `.idea/workspace.xml` with new task entry.">
      <option name="closed" value="true" />
      <created>1754055453821</created>
      <option name="number" value="00185" />
      <option name="presentableId" value="LOCAL-00185" />
      <option name="project" value="LOCAL" />
      <updated>1754055453821</updated>
    </task>
    <task id="LOCAL-00186" summary="Refactor `ApplicationTest` to simplify test logic: replace `run(Path)` with `run()`, adjust method signatures, and improve file existence checks.">
      <option name="closed" value="true" />
      <created>1754055519431</created>
      <option name="number" value="00186" />
      <option name="presentableId" value="LOCAL-00186" />
      <option name="project" value="LOCAL" />
      <updated>1754055519431</updated>
    </task>
    <task id="LOCAL-00187" summary="Huhk">
      <option name="closed" value="true" />
      <created>1754055542822</created>
      <option name="number" value="00187" />
      <option name="presentableId" value="LOCAL-00187" />
      <option name="project" value="LOCAL" />
      <updated>1754055542822</updated>
    </task>
    <task id="LOCAL-00188" summary="Reformat?">
      <option name="closed" value="true" />
      <created>1754055547354</created>
      <option name="number" value="00188" />
      <option name="presentableId" value="LOCAL-00188" />
      <option name="project" value="LOCAL" />
      <updated>1754055547354</updated>
    </task>
    <task id="LOCAL-00189" summary="Refactor `ApplicationTest`: rename `run()` to `tryRun()`, extract `run(Path)` for better code reuse, and adjust tests accordingly.">
      <option name="closed" value="true" />
      <created>1754055653785</created>
      <option name="number" value="00189" />
      <option name="presentableId" value="LOCAL-00189" />
      <option name="project" value="LOCAL" />
      <updated>1754055653785</updated>
    </task>
    <task id="LOCAL-00190" summary="Refactor `ApplicationTest`: replace `try-catch` with `Optional` handling for cleaner error propagation, extract `createFile()` utility, and update `run()` signature for improved code clarity and reuse.">
      <option name="closed" value="true" />
      <created>1754055720993</created>
      <option name="number" value="00190" />
      <option name="presentableId" value="LOCAL-00190" />
      <option name="project" value="LOCAL" />
      <updated>1754055720993</updated>
    </task>
    <task id="LOCAL-00191" summary="Introduce `Application` class: encapsulate file handling logic, extract `createFile()` utility, and simplify error propagation with `Optional`.">
      <option name="closed" value="true" />
      <created>1754055772725</created>
      <option name="number" value="00191" />
      <option name="presentableId" value="LOCAL-00191" />
      <option name="project" value="LOCAL" />
      <updated>1754055772725</updated>
    </task>
    <task id="LOCAL-00192" summary="Add `Result` interface with `Ok` and `Err` implementations to encapsulate success/failure states. Update `Application` to use `Result` for file operations, simplifying error handling and improving clarity. Adjust related tests accordingly.">
      <option name="closed" value="true" />
      <created>1754056780294</created>
      <option name="number" value="00192" />
      <option name="presentableId" value="LOCAL-00192" />
      <option name="project" value="LOCAL" />
      <updated>1754056780294</updated>
    </task>
    <task id="LOCAL-00193" summary="Introduce `Error` interface with `CompileError` and `ThrowableError` implementations to standardize error handling. Update `Application` and tests to use `Error` for improved readability and consistency.">
      <option name="closed" value="true" />
      <created>1754058164341</created>
      <option name="number" value="00193" />
      <option name="presentableId" value="LOCAL-00193" />
      <option name="project" value="LOCAL" />
      <updated>1754058164342</updated>
    </task>
    <task id="LOCAL-00194" summary="Change `writeString` parameter type from `String` to `CharSequence` for enhanced flexibility.">
      <option name="closed" value="true" />
      <created>1754058184503</created>
      <option name="number" value="00194" />
      <option name="presentableId" value="LOCAL-00194" />
      <option name="project" value="LOCAL" />
      <updated>1754058184503</updated>
    </task>
    <task id="LOCAL-00195" summary="Refactor `Application`: simplify `run()` by introducing `compileAndWrite` helper, improving modularity and error handling.">
      <option name="closed" value="true" />
      <created>1754058303969</created>
      <option name="number" value="00195" />
      <option name="presentableId" value="LOCAL-00195" />
      <option name="project" value="LOCAL" />
      <updated>1754058303969</updated>
    </task>
    <task id="LOCAL-00196" summary="Nuke">
      <option name="closed" value="true" />
      <created>1754072003613</created>
      <option name="number" value="00196" />
      <option name="presentableId" value="LOCAL-00196" />
      <option name="project" value="LOCAL" />
      <updated>1754072003613</updated>
    </task>
    <task id="LOCAL-00197" summary="Main">
      <option name="closed" value="true" />
      <created>1754072064382</created>
      <option name="number" value="00197" />
      <option name="presentableId" value="LOCAL-00197" />
      <option name="project" value="LOCAL" />
      <updated>1754072064382</updated>
    </task>
    <task id="LOCAL-00198" summary="Extend `Main` to copy its source to C equivalent, update `RunManager` configuration.">
      <option name="closed" value="true" />
      <created>1754072229260</created>
      <option name="number" value="00198" />
      <option name="presentableId" value="LOCAL-00198" />
      <option name="project" value="LOCAL" />
      <updated>1754072229260</updated>
    </task>
    <task id="LOCAL-00199" summary="Refactor `Main`: introduce `divide` and `generatePlaceholder` methods for modularized string processing and improved readability. Update code to handle source-to-C conversion with segmented placeholders.">
      <option name="closed" value="true" />
      <created>1754072318320</created>
      <option name="number" value="00199" />
      <option name="presentableId" value="LOCAL-00199" />
      <option name="project" value="LOCAL" />
      <updated>1754072318320</updated>
    </task>
    <task id="LOCAL-00200" summary="Refactor `Main`: replace `generatePlaceholder` with `compileRootSegment`, enhance modularity by introducing a helper for segment compilation, and improve handling of package declarations.">
      <option name="closed" value="true" />
      <created>1754072366104</created>
      <option name="number" value="00200" />
      <option name="presentableId" value="LOCAL-00200" />
      <option name="project" value="LOCAL" />
      <updated>1754072366104</updated>
    </task>
    <task id="LOCAL-00201" summary="Refactor `Main`: update `compileRootSegment` to exclude both `package` and `import` declarations, clean up unused commented code in C source.">
      <option name="closed" value="true" />
      <created>1754072389754</created>
      <option name="number" value="00201" />
      <option name="presentableId" value="LOCAL-00201" />
      <option name="project" value="LOCAL" />
      <updated>1754072389754</updated>
    </task>
    <task id="LOCAL-00202" summary="Refactor `Main`: introduce `State` class to modularize segment processing, enhance `divide` with block-level awareness, and clean up C source comments.">
      <option name="closed" value="true" />
      <created>1754072632722</created>
      <option name="number" value="00202" />
      <option name="presentableId" value="LOCAL-00202" />
      <option name="project" value="LOCAL" />
      <updated>1754072632722</updated>
    </task>
    <task id="LOCAL-00203" summary="Refactor `Main`: enhance `compileRootSegment` with `compileRootSegmentValue` and `compileClass` helpers for improved modularity and class handling in Java-to-C conversion.">
      <option name="closed" value="true" />
      <created>1754072819914</created>
      <option name="number" value="00203" />
      <option name="presentableId" value="LOCAL-00203" />
      <option name="project" value="LOCAL" />
      <updated>1754072819914</updated>
    </task>
    <task id="LOCAL-00204" summary="Rebuild">
      <option name="closed" value="true" />
      <created>1754072834086</created>
      <option name="number" value="00204" />
      <option name="presentableId" value="LOCAL-00204" />
      <option name="project" value="LOCAL" />
      <updated>1754072834086</updated>
    </task>
    <task id="LOCAL-00205" summary="Refactor `Main`: standardize empty struct formatting in Java-to-C conversion and clean up C source comments.">
      <option name="closed" value="true" />
      <created>1754072886814</created>
      <option name="number" value="00205" />
      <option name="presentableId" value="LOCAL-00205" />
      <option name="project" value="LOCAL" />
      <updated>1754072886814</updated>
    </task>
    <task id="LOCAL-00206" summary="Refactor `Main`: extract `compile` and `compileStatements` methods for improved readability and modularity; enhance `divide` with depth awareness.">
      <option name="closed" value="true" />
      <created>1754073039914</created>
      <option name="number" value="00206" />
      <option name="presentableId" value="LOCAL-00206" />
      <option name="project" value="LOCAL" />
      <updated>1754073039914</updated>
    </task>
    <task id="LOCAL-00207" summary="Refactor `Main`: extract `compileClassSegmentValue` for improved modularity, standardize struct formatting, and clean up commented-out code in C source. Inner structs.">
      <option name="closed" value="true" />
      <created>1754073133206</created>
      <option name="number" value="00207" />
      <option name="presentableId" value="LOCAL-00207" />
      <option name="project" value="LOCAL" />
      <updated>1754073133206</updated>
    </task>
    <task id="LOCAL-00208" summary="Refactor `Main`: enhance modularity by introducing `ParseState` and `Tuple` records, improve `compile` with streamlined structure gathering, and refine `divide` with `DivideState` updates. Clean up C source.">
      <option name="closed" value="true" />
      <created>1754073652619</created>
      <option name="number" value="00208" />
      <option name="presentableId" value="LOCAL-00208" />
      <option name="project" value="LOCAL" />
      <updated>1754073652619</updated>
    </task>
    <task id="LOCAL-00209" summary="Refactor `Main`: enhance `compileClassSegmentValue` handling with `compileField` helper, improve `struct` formatting with line breaks, and clean up commented-out C source code.">
      <option name="closed" value="true" />
      <created>1754073815936</created>
      <option name="number" value="00209" />
      <option name="presentableId" value="LOCAL-00209" />
      <option name="project" value="LOCAL" />
      <updated>1754073815936</updated>
    </task>
    <task id="LOCAL-00210" summary="Refactor `Main`: introduce function tracking in `ParseState`, add `generateConstructor` method, improve `compile` logic for struct and function integration, and clean up commented-out C source code.">
      <option name="closed" value="true" />
      <created>1754074234893</created>
      <option name="number" value="00210" />
      <option name="presentableId" value="LOCAL-00210" />
      <option name="project" value="LOCAL" />
      <updated>1754074234893</updated>
    </task>
    <task id="LOCAL-00211" summary="Refactor `Main`: add `compileDefinition` method for enhanced field compilation, improve `compileField` logic, and clean up commented-out C source code.">
      <option name="closed" value="true" />
      <created>1754074683556</created>
      <option name="number" value="00211" />
      <option name="presentableId" value="LOCAL-00211" />
      <option name="project" value="LOCAL" />
      <updated>1754074683556</updated>
    </task>
    <task id="LOCAL-00212" summary="Refactor `Main`: replace `Collection` with custom `List` implementation for improved modularity and functional stream handling, and clean up C comments.">
      <option name="closed" value="true" />
      <created>1754074970187</created>
      <option name="number" value="00212" />
      <option name="presentableId" value="LOCAL-00212" />
      <option name="project" value="LOCAL" />
      <updated>1754074970187</updated>
    </task>
    <task id="LOCAL-00213" summary="Refactor `Main`: extract `compileStructure` method for reusable class and interface compilation, enhance type handling in Java-to-C conversion, and clean up commented-out C source code.">
      <option name="closed" value="true" />
      <created>1754075052204</created>
      <option name="number" value="00213" />
      <option name="presentableId" value="LOCAL-00213" />
      <option name="project" value="LOCAL" />
      <updated>1754075052204</updated>
    </task>
    <task id="LOCAL-00214" summary="Refactor `Main`: move `empty` method to `Lists` utility class for improved organization, update references in `DivideState` and `ParseState`, and align C source with Java changes. Clean up commented-out C code.">
      <option name="closed" value="true" />
      <created>1754075087926</created>
      <option name="number" value="00214" />
      <option name="presentableId" value="LOCAL-00214" />
      <option name="project" value="LOCAL" />
      <updated>1754075087926</updated>
    </task>
    <task id="LOCAL-00215" summary="Refactor `Main`: add `compileMethod` to enhance method compilation, improve `compileClassSegmentValue` logic, and clean up commented-out C source code.">
      <option name="closed" value="true" />
      <created>1754075190073</created>
      <option name="number" value="00215" />
      <option name="presentableId" value="LOCAL-00215" />
      <option name="project" value="LOCAL" />
      <updated>1754075190073</updated>
    </task>
    <task id="LOCAL-00216" summary="Refactor `Main`: extract `compileDefinitionBeforeName` for improved readability, reuse in field compilation, and clean up commented-out C source code.">
      <option name="closed" value="true" />
      <created>1754075240731</created>
      <option name="number" value="00216" />
      <option name="presentableId" value="LOCAL-00216" />
      <option name="project" value="LOCAL" />
      <updated>1754075240731</updated>
    </task>
    <task id="LOCAL-00217" summary="Refactor `Main`: improve `compileClassSegment` method by refining name handling logic, updating `compileDefinitionBeforeName`, and cleaning up commented-out C source code.">
      <option name="closed" value="true" />
      <created>1754075347887</created>
      <option name="number" value="00217" />
      <option name="presentableId" value="LOCAL-00217" />
      <option name="project" value="LOCAL" />
      <updated>1754075347887</updated>
    </task>
    <task id="LOCAL-00218" summary="Refactor `Main`: update `compileDefinition` for improved function addition in `ParseState`, refine `compileDefinitionBeforeName` logic, and clean up commented-out C source code.">
      <option name="closed" value="true" />
      <created>1754075573278</created>
      <option name="number" value="00218" />
      <option name="presentableId" value="LOCAL-00218" />
      <option name="project" value="LOCAL" />
      <updated>1754075573278</updated>
    </task>
    <task id="LOCAL-00219" summary="Refactor `Main`: simplify `compileRootSegment` and `compileClassSegment` methods, improve line handling logic, adjust `compileDefinition` output, and clean up commented-out C source code.">
      <option name="closed" value="true" />
      <created>1754075875163</created>
      <option name="number" value="00219" />
      <option name="presentableId" value="LOCAL-00219" />
      <option name="project" value="LOCAL" />
      <updated>1754075875163</updated>
    </task>
    <task id="LOCAL-00220" summary="Int types">
      <option name="closed" value="true" />
      <created>1754075957926</created>
      <option name="number" value="00220" />
      <option name="presentableId" value="LOCAL-00220" />
      <option name="project" value="LOCAL" />
      <updated>1754075957926</updated>
    </task>
    <task id="LOCAL-00221" summary="Remove usage of StringBuilder">
      <option name="closed" value="true" />
      <created>1754076010443</created>
      <option name="number" value="00221" />
      <option name="presentableId" value="LOCAL-00221" />
      <option name="project" value="LOCAL" />
      <updated>1754076010443</updated>
    </task>
    <task id="LOCAL-00222" summary="Refactor `Main`: replace `String` structures with `JavaStructure` for improved modularity, update `ParseState` and `compile` logic, and align C source with Java changes.">
      <option name="closed" value="true" />
      <created>1754076203298</created>
      <option name="number" value="00222" />
      <option name="presentableId" value="LOCAL-00222" />
      <option name="project" value="LOCAL" />
      <updated>1754076203298</updated>
    </task>
    <task id="LOCAL-00223" summary="Hmmm">
      <option name="closed" value="true" />
      <created>1754076628215</created>
      <option name="number" value="00223" />
      <option name="presentableId" value="LOCAL-00223" />
      <option name="project" value="LOCAL" />
      <updated>1754076628215</updated>
    </task>
    <task id="LOCAL-00224" summary="Refactor `Main`: update `compileDefinition` and related methods to use `Tuple` for improved state management, adjust parameter usage, and refine `compileType` logic.">
      <option name="closed" value="true" />
      <created>1754076841786</created>
      <option name="number" value="00224" />
      <option name="presentableId" value="LOCAL-00224" />
      <option name="project" value="LOCAL" />
      <updated>1754076841786</updated>
    </task>
    <task id="LOCAL-00225" summary="Refactor `Main`: extract `attachStructure` for improved modularity, add `compileTemplateType` to enhance type handling, and update `compileType` logic for better extensibility.">
      <option name="closed" value="true" />
      <created>1754077193346</created>
      <option name="number" value="00225" />
      <option name="presentableId" value="LOCAL-00225" />
      <option name="project" value="LOCAL" />
      <updated>1754077193346</updated>
    </task>
    <task id="LOCAL-00226" summary="Refactor `Main`: Generate monomorphized structures. add `visitedTemplates` to `ParseState` for improved template tracking, implement `compileTemplateType` for enhanced type handling, and refine logic in `compileDefinition` and `compileType`.">
      <option name="closed" value="true" />
      <created>1754077693623</created>
      <option name="number" value="00226" />
      <option name="presentableId" value="LOCAL-00226" />
      <option name="project" value="LOCAL" />
      <updated>1754077693623</updated>
    </task>
    <task id="LOCAL-00227" summary="Refactor `Main`: rename `compileTemplateType` to `compileGenericType`, adjust structure monomorphization logic, update `ParseState` and C source for consistency.">
      <option name="closed" value="true" />
      <created>1754077913960</created>
      <option name="number" value="00227" />
      <option name="presentableId" value="LOCAL-00227" />
      <option name="project" value="LOCAL" />
      <updated>1754077913960</updated>
    </task>
    <task id="LOCAL-00228" summary="Refactor `Main`: add `type` to `JavaStructure`, adjust `assembleStructure` and `attachStructure` for better type handling, update C source for interface support.">
      <option name="closed" value="true" />
      <created>1754078664040</created>
      <option name="number" value="00228" />
      <option name="presentableId" value="LOCAL-00228" />
      <option name="project" value="LOCAL" />
      <updated>1754078664041</updated>
    </task>
    <task id="LOCAL-00229" summary="Refactor `Main`: add &quot;record&quot; support to `compileStructure`, update `ParseState` and `JavaStructure` for improved type handling, and refine C source compatibility.">
      <option name="closed" value="true" />
      <created>1754078766701</created>
      <option name="number" value="00229" />
      <option name="presentableId" value="LOCAL-00229" />
      <option name="project" value="LOCAL" />
      <updated>1754078766701</updated>
    </task>
    <task id="LOCAL-00230" summary="Refactor `Main`: add line separators to generated code for improved formatting, simplify comments in C source, and refine logic in `compileMethod`.">
      <option name="closed" value="true" />
      <created>1754078804119</created>
      <option name="number" value="00230" />
      <option name="presentableId" value="LOCAL-00230" />
      <option name="project" value="LOCAL" />
      <updated>1754078804119</updated>
    </task>
    <task id="LOCAL-00231" summary="Refactor `Main`: Monomorphize structures? extend `ParseState` with `typeArguments` and `typeParameters` for enhanced type handling, refine Java and C logic in `compileType` and related methods, and update `Lists` utility.">
      <option name="closed" value="true" />
      <created>1754079781613</created>
      <option name="number" value="00231" />
      <option name="presentableId" value="LOCAL-00231" />
      <option name="project" value="LOCAL" />
      <updated>1754079781613</updated>
    </task>
    <task id="LOCAL-00232" summary="Refactor `Main`: introduce `Type` interface and its implementations (`Ref`, `StructType`, `Placeholder`, `Primitive`), replace `String` with `Type` in `ParseState` and related methods, monomorphize types more effectively, and align Java and C logic for enhanced type generation.">
      <option name="closed" value="true" />
      <created>1754080046744</created>
      <option name="number" value="00232" />
      <option name="presentableId" value="LOCAL-00232" />
      <option name="project" value="LOCAL" />
      <updated>1754080046744</updated>
    </task>
    <option name="localTasksCounter" value="233" />
    <servers />
  </component>
  <component name="UnknownFeatures">
    <option featureType="com.intellij.fileTypeFactory" implementationName="*.ts" />
  </component>
  <component name="Vcs.Log.Tabs.Properties">
    <option name="TAB_STATES">
      <map>
        <entry key="MAIN">
          <value>
            <State />
          </value>
        </entry>
      </map>
    </option>
  </component>
  <component name="VcsManagerConfiguration">
    <option name="CHECK_CODE_CLEANUP_BEFORE_PROJECT_COMMIT_PROFILE" value="Project Default" />
    <MESSAGE value="Swap out List" />
    <MESSAGE value="Refactor `Main`: replace `Collection` with custom `List` implementation for improved modularity and functional stream handling, and clean up C comments." />
    <MESSAGE value="Refactor `Main`: extract `compileStructure` method for reusable class and interface compilation, enhance type handling in Java-to-C conversion, and clean up commented-out C source code." />
    <MESSAGE value="Refactor `Main`: move `empty` method to `Lists` utility class for improved organization, update references in `DivideState` and `ParseState`, and align C source with Java changes. Clean up commented-out C code." />
    <MESSAGE value="Refactor `Main`: add `compileMethod` to enhance method compilation, improve `compileClassSegmentValue` logic, and clean up commented-out C source code." />
    <MESSAGE value="Refactor `Main`: extract `compileDefinitionBeforeName` for improved readability, reuse in field compilation, and clean up commented-out C source code." />
    <MESSAGE value="Refactor `Main`: improve handling of struct names in `compile`, extract `beforeContent` logic for readability, and clean up unused C code." />
    <MESSAGE value="Refactor `Main`: improve `compileClassSegment` method by refining name handling logic, updating `compileDefinitionBeforeName`, and cleaning up commented-out C source code." />
    <MESSAGE value="Refactor `Main`: update `compileDefinition` for improved function addition in `ParseState`, refine `compileDefinitionBeforeName` logic, and clean up commented-out C source code." />
    <MESSAGE value="Refactor `Main`: refine `compileClassSegment` with empty input check, update `compileClassSegmentValue`, and clean up commented-out C source code." />
    <MESSAGE value="Refactor `Main`: simplify `compileRootSegment` and `compileClassSegment` methods, improve line handling logic, adjust `compileDefinition` output, and clean up commented-out C source code." />
    <MESSAGE value="Int types" />
    <MESSAGE value="Remove usage of StringBuilder" />
    <MESSAGE value="Refactor `Main`: replace `String` structures with `JavaStructure` for improved modularity, update `ParseState` and `compile` logic, and align C source with Java changes." />
    <MESSAGE value="Hmmm" />
    <MESSAGE value="Refactor `Main`: update `compileDefinition` and related methods to use `Tuple` for improved state management, adjust parameter usage, and refine `compileType` logic." />
    <MESSAGE value="Refactor `Main`: extract `attachStructure` for improved modularity, add `compileTemplateType` to enhance type handling, and update `compileType` logic for better extensibility." />
    <MESSAGE value="Refactor `Main`: Generate monomorphized structures. add `visitedTemplates` to `ParseState` for improved template tracking, implement `compileTemplateType` for enhanced type handling, and refine logic in `compileDefinition` and `compileType`." />
    <MESSAGE value="Refactor `Main`: rename `compileTemplateType` to `compileGenericType`, adjust structure monomorphization logic, update `ParseState` and C source for consistency." />
    <MESSAGE value="OK" />
    <MESSAGE value="Refactor `Main`: add `type` to `JavaStructure`, adjust `assembleStructure` and `attachStructure` for better type handling, update C source for interface support." />
    <MESSAGE value="Refactor `Main`: add &quot;record&quot; support to `compileStructure`, update `ParseState` and `JavaStructure` for improved type handling, and refine C source compatibility." />
    <MESSAGE value="Refactor `Main`: add line separators to generated code for improved formatting, simplify comments in C source, and refine logic in `compileMethod`." />
    <MESSAGE value="Refactor `Main`: Monomorphize structures? extend `ParseState` with `typeArguments` and `typeParameters` for enhanced type handling, refine Java and C logic in `compileType` and related methods, and update `Lists` utility." />
    <MESSAGE value="Refactor `Main`: introduce `Type` interface and its implementations (`Ref`, `StructType`, `Placeholder`, `Primitive`), replace `String` with `Type` in `ParseState` and related methods, monomorphize types more effectively, and align Java and C logic for enhanced type generation." />
    <option name="LAST_COMMIT_MESSAGE" value="Refactor `Main`: introduce `Type` interface and its implementations (`Ref`, `StructType`, `Placeholder`, `Primitive`), replace `String` with `Type` in `ParseState` and related methods, monomorphize types more effectively, and align Java and C logic for enhanced type generation." />
  </component>
  <component name="XDebuggerManager">
    <breakpoint-manager>
      <breakpoints>
        <line-breakpoint enabled="true" type="java-method">
          <url>jar://$USER_HOME$/.jdks/openjdk-24.0.1/lib/src.zip!/java.base/java/lang/OutOfMemoryError.java</url>
          <line>46</line>
          <properties class="java.lang.OutOfMemoryError" method="&lt;init&gt;">
            <option name="EMULATED" value="true" />
            <option name="WATCH_EXIT" value="false" />
          </properties>
          <option name="timeStamp" value="22" />
        </line-breakpoint>
        <line-breakpoint enabled="true" type="java-method">
          <url>jar://$USER_HOME$/.jdks/openjdk-24.0.1/lib/src.zip!/java.base/java/lang/OutOfMemoryError.java</url>
          <line>56</line>
          <properties class="java.lang.OutOfMemoryError" method="&lt;init&gt;">
            <option name="EMULATED" value="true" />
            <option name="WATCH_EXIT" value="false" />
          </properties>
          <option name="timeStamp" value="24" />
        </line-breakpoint>
      </breakpoints>
    </breakpoint-manager>
    <pin-to-top-manager>
      <pinned-members>
        <PinnedItemInfo parentTag="java.util.HashMap$Node" memberName="key" />
        <PinnedItemInfo parentTag="magma.compile.MapNode" memberName="maybeType" />
        <PinnedItemInfo parentTag="java.util.HashMap$Node" memberName="value" />
        <PinnedItemInfo parentTag="jvm.collect.map.JavaMap" memberName="map" />
        <PinnedItemInfo parentTag="magma.option.Tuple" memberName="right" />
        <PinnedItemInfo parentTag="magma.Main$Maps$JavaMap" memberName="internalMap" />
        <PinnedItemInfo parentTag="magma.Main$StructType" memberName="properties" />
      </pinned-members>
    </pin-to-top-manager>
  </component>
</project>
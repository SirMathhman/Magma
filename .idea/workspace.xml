<?xml version="1.0" encoding="UTF-8"?>
<project version="4">
  <component name="AnalysisUIOptions">
    <option name="ANALYZE_INJECTED_CODE" value="false" />
  </component>
  <component name="AutoImportSettings">
    <option name="autoReloadType" value="SELECTIVE" />
  </component>
  <component name="ChangeListManager">
    <list default="true" id="091cd905-c547-4179-9fb8-5e9879cce285" name="Changes" comment="Update `.gitignore` to exclude `/lib/` directory and adjust `.idea/workspace.xml` to reflect new `Batch.test` configuration changes.">
      <change beforePath="$PROJECT_DIR$/.idea/workspace.xml" beforeDir="false" afterPath="$PROJECT_DIR$/.idea/workspace.xml" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/src/main/java/com/magma/Compiler.java" beforeDir="false" afterPath="$PROJECT_DIR$/src/main/java/com/magma/Compiler.java" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/src/test/java/com/magma/CompilerTest.java" beforeDir="false" afterPath="$PROJECT_DIR$/src/test/java/com/magma/CompilerTest.java" afterDir="false" />
    </list>
    <option name="SHOW_DIALOG" value="false" />
    <option name="HIGHLIGHT_CONFLICTS" value="true" />
    <option name="HIGHLIGHT_NON_ACTIVE_CHANGELIST" value="false" />
    <option name="LAST_RESOLUTION" value="IGNORE" />
  </component>
  <component name="FileTemplateManagerImpl">
    <option name="RECENT_TEMPLATES">
      <list>
        <option value="Interface" />
        <option value="Record" />
        <option value="Class" />
      </list>
    </option>
  </component>
  <component name="Git.Settings">
    <option name="PUSH_AUTO_UPDATE" value="true" />
    <option name="RECENT_GIT_ROOT_PATH" value="$PROJECT_DIR$" />
  </component>
  <component name="GitHubPullRequestSearchHistory">{
  &quot;lastFilter&quot;: {
    &quot;state&quot;: &quot;OPEN&quot;,
    &quot;assignee&quot;: &quot;SirMathhman&quot;
  }
}</component>
  <component name="GithubProjectSettings">
    <option name="branchProtectionPatterns">
      <list>
        <option value="master" />
      </list>
    </option>
  </component>
  <component name="GithubPullRequestsUISettings">{
  &quot;selectedUrlAndAccountId&quot;: {
    &quot;url&quot;: &quot;https://github.com/SirMathhman/Magma.git&quot;,
    &quot;accountId&quot;: &quot;5ccce926-293e-4330-b2a7-270ea3228439&quot;
  }
}</component>
  <component name="ProblemsViewState">
    <option name="selectedTabId" value="CurrentFile" />
  </component>
  <component name="ProjectColorInfo">{
  &quot;associatedIndex&quot;: 3
}</component>
  <component name="ProjectId" id="304EoLp6ZWsUcvlOP9yXLjMrk5A" />
  <component name="ProjectLevelVcsManager">
    <OptionsSetting value="false" id="Update" />
    <ConfirmationsSetting value="2" id="Add" />
  </component>
  <component name="ProjectViewState">
    <option name="hideEmptyMiddlePackages" value="true" />
    <option name="showLibraryContents" value="true" />
  </component>
  <component name="PropertiesComponent">{
  &quot;keyToString&quot;: {
    &quot;Application.HelloWorld.executor&quot;: &quot;Run&quot;,
    &quot;Application.Main.executor&quot;: &quot;Run&quot;,
    &quot;Application.MainV2.executor&quot;: &quot;Run&quot;,
    &quot;Batch.build.executor&quot;: &quot;Run&quot;,
    &quot;Batch.test.executor&quot;: &quot;Run&quot;,
    &quot;Downloaded.Files.Path.Enabled&quot;: &quot;false&quot;,
    &quot;JUnit.All in Magma.executor&quot;: &quot;Run&quot;,
    &quot;JUnit.ApplicationTest.executor&quot;: &quot;Run&quot;,
    &quot;JUnit.MapNodeImmutabilityTest.testMergeReturnsNewInstance.executor&quot;: &quot;Debug&quot;,
    &quot;ModuleVcsDetector.initialDetectionPerformed&quot;: &quot;true&quot;,
    &quot;Python tests.Python tests for test_basic.test_compile_non_empty_returns_placeholder.executor&quot;: &quot;Run&quot;,
    &quot;Python tests.Python tests for test_compiler.test_compile_empty_input_creates_empty_main.executor&quot;: &quot;Run&quot;,
    &quot;Python tests.Python tests for test_compiler.test_compile_inner_function_with_inferred_declaration.executor&quot;: &quot;Run&quot;,
    &quot;Python tests.Python tests for test_misc.test_compile_class_fn_param_function_type.executor&quot;: &quot;Run&quot;,
    &quot;Python tests.Python tests in test_basic.py.executor&quot;: &quot;Run&quot;,
    &quot;Python tests.Python tests in test_compiler.py.executor&quot;: &quot;Run&quot;,
    &quot;Python tests.Python tests in test_flow.py.executor&quot;: &quot;Run&quot;,
    &quot;Python tests.Python tests in test_imports.py.executor&quot;: &quot;Run&quot;,
    &quot;Python tests.Python tests in test_misc.py.executor&quot;: &quot;Run&quot;,
    &quot;Python tests.Python tests in tests.executor&quot;: &quot;Run&quot;,
    &quot;Python tests.pytest for test_basic.test_compile_non_empty_returns_placeholder.executor&quot;: &quot;Run&quot;,
    &quot;Python.__init__.executor&quot;: &quot;Run&quot;,
    &quot;Python.utils.executor&quot;: &quot;Run&quot;,
    &quot;Repository.Attach.Annotations&quot;: &quot;false&quot;,
    &quot;Repository.Attach.JavaDocs&quot;: &quot;false&quot;,
    &quot;Repository.Attach.Sources&quot;: &quot;false&quot;,
    &quot;RunOnceActivity.ShowReadmeOnStart&quot;: &quot;true&quot;,
    &quot;RunOnceActivity.git.unshallow&quot;: &quot;true&quot;,
    &quot;git-widget-placeholder&quot;: &quot;master&quot;,
    &quot;introduce.parameter.lambda&quot;: &quot;true&quot;,
    &quot;junie.onboarding.icon.badge.shown&quot;: &quot;true&quot;,
    &quot;kotlin-language-version-configured&quot;: &quot;true&quot;,
    &quot;last_directory_selection&quot;: &quot;C:/Users/mathm/IdeaProjects/Magma/test/java&quot;,
    &quot;last_opened_file_path&quot;: &quot;C:/Users/mathm/IdeaProjects/Magma&quot;,
    &quot;onboarding.tips.debug.path&quot;: &quot;C:/Users/mathm/IdeaProjects/Magma/src/Main.java&quot;,
    &quot;project.structure.last.edited&quot;: &quot;Project&quot;,
    &quot;project.structure.proportion&quot;: &quot;0.15044248&quot;,
    &quot;project.structure.side.proportion&quot;: &quot;0.2&quot;,
    &quot;run.code.analysis.last.selected.profile&quot;: &quot;pProject Default&quot;,
    &quot;settings.editor.selected.configurable&quot;: &quot;preferences.sourceCode.Java&quot;,
    &quot;to.speed.mode.migration.done&quot;: &quot;true&quot;
  }
}</component>
  <component name="RecentsManager">
    <key name="CreateClassDialog.RecentsKey">
      <recent name="magma" />
      <recent name="magma.error" />
      <recent name="magma.rule" />
      <recent name="magma.node" />
    </key>
    <key name="MoveFile.RECENT_KEYS">
      <recent name="C:\Users\mathm\IdeaProjects\Magma\src\java" />
      <recent name="C:\Users\mathm\IdeaProjects\Magma\.venv" />
    </key>
    <key name="MoveMembersDialog.RECENTS_KEY">
      <recent name="magma.Placeholder" />
      <recent name="magma.Main.Lists" />
      <recent name="magma.Application" />
      <recent name="magma.ApplicationTest" />
      <recent name="magma.Lang" />
    </key>
    <key name="ExtractSuperBase.RECENT_KEYS">
      <recent name="magma.node" />
      <recent name="magma" />
      <recent name="magma.divide" />
    </key>
    <key name="MoveClassesOrPackagesDialog.RECENTS_KEY">
      <recent name="magma.node" />
      <recent name="magma.result" />
      <recent name="magma.option" />
      <recent name="magma" />
      <recent name="magma.rule.divide" />
    </key>
    <key name="MoveInnerDialog.RECENTS_KEY">
      <recent name="" />
      <recent name="magma" />
      <recent name="magma.node" />
    </key>
    <key name="CopyClassDialog.RECENTS_KEY">
      <recent name="magma" />
    </key>
  </component>
  <component name="RunManager" selected="Batch.test">
    <configuration name="build" type="BatchConfigurationType" factoryName="Batch" temporary="true">
      <module name="Magma" />
      <option name="INTERPRETER_OPTIONS" value="" />
      <option name="WORKING_DIRECTORY" value="C:\Users\mathm\IdeaProjects\Magma" />
      <option name="PARENT_ENVS" value="true" />
      <option name="SCRIPT_NAME" value="build.bat" />
      <option name="PARAMETERS" value="" />
      <method v="2">
        <option name="Make" enabled="true" />
      </method>
    </configuration>
    <configuration name="test" type="BatchConfigurationType" factoryName="Batch" temporary="true">
      <module name="Magma" />
      <option name="INTERPRETER_OPTIONS" value="" />
      <option name="WORKING_DIRECTORY" value="$PROJECT_DIR$" />
      <option name="PARENT_ENVS" value="true" />
      <option name="SCRIPT_NAME" value="test.bat" />
      <option name="PARAMETERS" value="" />
      <method v="2">
        <option name="Make" enabled="true" />
      </method>
    </configuration>
    <configuration name="All in Magma" type="JUnit" factoryName="JUnit" temporary="true" nameIsGenerated="true">
      <module name="Magma" />
      <option name="PACKAGE_NAME" value="" />
      <option name="TEST_OBJECT" value="package" />
      <method v="2">
        <option name="Make" enabled="true" />
      </method>
    </configuration>
    <recent_temporary>
      <list>
        <item itemvalue="Batch.test" />
        <item itemvalue="JUnit.All in Magma" />
        <item itemvalue="Batch.build" />
        <item itemvalue="JUnit.All in Magma" />
        <item itemvalue="Batch.test" />
      </list>
    </recent_temporary>
  </component>
  <component name="SpellCheckerSettings" RuntimeDictionaries="0" Folders="0" CustomDictionaries="0" DefaultDictionary="application-level" UseSingleDictionary="true" transferred="true" />
  <component name="TaskManager">
    <task active="true" id="Default" summary="Default task">
      <changelist id="091cd905-c547-4179-9fb8-5e9879cce285" name="Changes" comment="Delete everything! This is a hard reset!" />
      <created>1752878619782</created>
      <option name="number" value="Default" />
      <option name="presentableId" value="Default" />
      <updated>1752878619782</updated>
    </task>
    <task id="LOCAL-00389" summary="Remove `StringTestManual` and refactor string handling in `compile` with modular methods, optimizing string literal parsing and simplifying array handling logic.">
      <option name="closed" value="true" />
      <created>1754464239106</created>
      <option name="number" value="00389" />
      <option name="presentableId" value="LOCAL-00389" />
      <option name="project" value="LOCAL" />
      <updated>1754464239106</updated>
    </task>
    <task id="LOCAL-00390" summary="Remove array support from `compile` and delete associated classes (`ArrayTest`, `ArrayType`, `Declaration`, `Main`), simplifying the codebase.">
      <option name="closed" value="true" />
      <created>1754500997108</created>
      <option name="number" value="00390" />
      <option name="presentableId" value="LOCAL-00390" />
      <option name="project" value="LOCAL" />
      <updated>1754500997108</updated>
    </task>
    <task id="LOCAL-00391" summary="Add initial implementation of `Magma` Java to C compiler, including basic `compile` functionality, support for `Hello World`, integer and string arrays, and corresponding unit tests.">
      <option name="closed" value="true" />
      <created>1754503679754</created>
      <option name="number" value="00391" />
      <option name="presentableId" value="LOCAL-00391" />
      <option name="project" value="LOCAL" />
      <updated>1754503679754</updated>
    </task>
    <task id="LOCAL-00392" summary="Reformat">
      <option name="closed" value="true" />
      <created>1754503775490</created>
      <option name="number" value="00392" />
      <option name="presentableId" value="LOCAL-00392" />
      <option name="project" value="LOCAL" />
      <updated>1754503775490</updated>
    </task>
    <task id="LOCAL-00393" summary="Add `compile` support for variable declarations and implement `let x : I32 = 0;` to `int x = 0;` conversion.">
      <option name="closed" value="true" />
      <created>1754503954623</created>
      <option name="number" value="00393" />
      <option name="presentableId" value="LOCAL-00393" />
      <option name="project" value="LOCAL" />
      <updated>1754503954623</updated>
    </task>
    <task id="LOCAL-00394" summary="Add support for multiple integer types (I8-I64, U8-U64) in `compile`, implement type mapping logic, and extend tests.">
      <option name="closed" value="true" />
      <created>1754504253507</created>
      <option name="number" value="00394" />
      <option name="presentableId" value="LOCAL-00394" />
      <option name="project" value="LOCAL" />
      <updated>1754504253507</updated>
    </task>
    <task id="LOCAL-00395" summary="Refactor `processVariableDeclaration` and `findMatchingTypeMapper` to use `Optional`, improve formatting, and clean up whitespace.">
      <option name="closed" value="true" />
      <created>1754504298676</created>
      <option name="number" value="00395" />
      <option name="presentableId" value="LOCAL-00395" />
      <option name="project" value="LOCAL" />
      <updated>1754504298676</updated>
    </task>
    <task id="LOCAL-00396" summary="Add support for typeless variable declarations in `compile`, defaulting to I32, and update tests accordingly.">
      <option name="closed" value="true" />
      <created>1754504712473</created>
      <option name="number" value="00396" />
      <option name="presentableId" value="LOCAL-00396" />
      <option name="project" value="LOCAL" />
      <updated>1754504712473</updated>
    </task>
    <task id="LOCAL-00397" summary="Refactor `compile` to simplify typeless declaration check, improve formatting, and clean up whitespace.">
      <option name="closed" value="true" />
      <created>1754504765252</created>
      <option name="number" value="00397" />
      <option name="presentableId" value="LOCAL-00397" />
      <option name="project" value="LOCAL" />
      <updated>1754504765252</updated>
    </task>
    <task id="LOCAL-00398" summary="Add type inference from value suffixes (e.g., `100U64`) in `compile`, refactor related logic, and introduce `TypeInferenceTest`.">
      <option name="closed" value="true" />
      <created>1754505068482</created>
      <option name="number" value="00398" />
      <option name="presentableId" value="LOCAL-00398" />
      <option name="project" value="LOCAL" />
      <updated>1754505068482</updated>
    </task>
    <task id="LOCAL-00399" summary="Add support for `Bool` type in `compile`, update type inference logic, include `stdbool.h` as needed, and extend tests.">
      <option name="closed" value="true" />
      <created>1754505458582</created>
      <option name="number" value="00399" />
      <option name="presentableId" value="LOCAL-00399" />
      <option name="project" value="LOCAL" />
      <updated>1754505458582</updated>
    </task>
    <task id="LOCAL-00400" summary="Add support for `Bool` type in `compile`, update type inference logic, include `stdbool.h` as needed, and extend tests.">
      <option name="closed" value="true" />
      <created>1754506040494</created>
      <option name="number" value="00400" />
      <option name="presentableId" value="LOCAL-00400" />
      <option name="project" value="LOCAL" />
      <updated>1754506040494</updated>
    </task>
    <task id="LOCAL-00401" summary="Update README to reflect transition from Java to Magma language, add details for new array declaration syntax, and revise supported features list. Extend compiler functionality for array declarations (`let` syntax), implement comprehensive handling in `compile`, and add tests for array handling with various types and sizes.">
      <option name="closed" value="true" />
      <created>1754507547778</created>
      <option name="number" value="00401" />
      <option name="presentableId" value="LOCAL-00401" />
      <option name="project" value="LOCAL" />
      <updated>1754507547778</updated>
    </task>
    <task id="LOCAL-00402" summary="Refactor test cases to use inline `let` declarations instead of class-wrapped code snippets, remove">
      <option name="closed" value="true" />
      <created>1754507732929</created>
      <option name="number" value="00402" />
      <option name="presentableId" value="LOCAL-00402" />
      <option name="project" value="LOCAL" />
      <updated>1754507732929</updated>
    </task>
    <task id="LOCAL-00403" summary="Add conditional `#include &lt;stdio.h&gt;` based on I/O operation presence in `magmaCode`.">
      <option name="closed" value="true" />
      <created>1754507962888</created>
      <option name="number" value="00403" />
      <option name="presentableId" value="LOCAL-00403" />
      <option name="project" value="LOCAL" />
      <updated>1754507962889</updated>
    </task>
    <task id="LOCAL-00404" summary="Remove redundant conditional `#include &lt;stdio.h&gt;` logic and refactor formatting in `generateVariableDeclarationCCode`.">
      <option name="closed" value="true" />
      <created>1754507986375</created>
      <option name="number" value="00404" />
      <option name="presentableId" value="LOCAL-00404" />
      <option name="project" value="LOCAL" />
      <updated>1754507986375</updated>
    </task>
    <task id="LOCAL-00405" summary="Remove support for `Hello World`, integer array, and string array C code generation, along with corresponding Magma pattern checks. Simplify array declaration handling in `compile`.">
      <option name="closed" value="true" />
      <created>1754508043985</created>
      <option name="number" value="00405" />
      <option name="presentableId" value="LOCAL-00405" />
      <option name="project" value="LOCAL" />
      <updated>1754508043985</updated>
    </task>
    <task id="LOCAL-00406" summary="Refactor `compile` to unify declaration handling for arrays and variables, add `containsDeclarations` method, and implement `generateDeclarationCCode`.">
      <option name="closed" value="true" />
      <created>1754508316370</created>
      <option name="number" value="00406" />
      <option name="presentableId" value="LOCAL-00406" />
      <option name="project" value="LOCAL" />
      <updated>1754508316370</updated>
    </task>
    <task id="LOCAL-00407" summary="Remove unused methods for array and variable declaration handling, simplify and clean up `Main.java`.">
      <option name="closed" value="true" />
      <created>1754508350509</created>
      <option name="number" value="00407" />
      <option name="presentableId" value="LOCAL-00407" />
      <option name="project" value="LOCAL" />
      <updated>1754508350509</updated>
    </task>
    <task id="LOCAL-00408" summary="Add support for multi-dimensional arrays in `compile`, including parsing, C code generation, and unit tests.">
      <option name="closed" value="true" />
      <created>1754509020408</created>
      <option name="number" value="00408" />
      <option name="presentableId" value="LOCAL-00408" />
      <option name="project" value="LOCAL" />
      <updated>1754509020408</updated>
    </task>
    <task id="LOCAL-00409" summary="Refactor tests to replace `assertTrue` checks with `assertEquals` for improved clarity and reliability, and add `TestOutput.java` for char type debugging.">
      <option name="closed" value="true" />
      <created>1754509357800</created>
      <option name="number" value="00409" />
      <option name="presentableId" value="LOCAL-00409" />
      <option name="project" value="LOCAL" />
      <updated>1754509357800</updated>
    </task>
    <task id="LOCAL-00410" summary="Add support for semicolon-based array declaration syntax while maintaining backward compatibility with comma-based syntax, update parsing logic, and extend tests.">
      <option name="closed" value="true" />
      <created>1754509830880</created>
      <option name="number" value="00410" />
      <option name="presentableId" value="LOCAL-00410" />
      <option name="project" value="LOCAL" />
      <updated>1754509830880</updated>
    </task>
    <task id="LOCAL-00411" summary="Update character type from `Char` to `U8` across compiler, tests, and documentation to align with unified type conventions. Add `run_char_test.bat` for streamlined test execution.">
      <option name="closed" value="true" />
      <created>1754510467003</created>
      <option name="number" value="00411" />
      <option name="presentableId" value="LOCAL-00411" />
      <option name="project" value="LOCAL" />
      <updated>1754510467003</updated>
    </task>
    <task id="LOCAL-00412" summary="Add `StringTest` with unit tests for string handling in the Magma compiler, add `run_string_test.bat` for test execution, and update documentation to reflect semicolon-based array syntax.">
      <option name="closed" value="true" />
      <created>1754511830304</created>
      <option name="number" value="00412" />
      <option name="presentableId" value="LOCAL-00412" />
      <option name="project" value="LOCAL" />
      <updated>1754511830304</updated>
    </task>
    <task id="LOCAL-00413" summary="Refactor `Main.java` to simplify conditional statements and reduce nesting, extract `getDefaultTypeMapper` for clarity, and clean up `assertNotNull` assertions from unit tests.">
      <option name="closed" value="true" />
      <created>1754512136732</created>
      <option name="number" value="00413" />
      <option name="presentableId" value="LOCAL-00413" />
      <option name="project" value="LOCAL" />
      <updated>1754512136732</updated>
    </task>
    <task id="LOCAL-00414" summary="Refactor `Main.java` to use method reference in `orElseGet` for improved readability.">
      <option name="closed" value="true" />
      <created>1754512187437</created>
      <option name="number" value="00414" />
      <option name="presentableId" value="LOCAL-00414" />
      <option name="project" value="LOCAL" />
      <updated>1754512187437</updated>
    </task>
    <task id="LOCAL-00415" summary="Add support for string literals in U8 array declarations, update C code generation to handle string initializers, and extend `containsDeclarations` logic accordingly.">
      <option name="closed" value="true" />
      <created>1754512486268</created>
      <option name="number" value="00415" />
      <option name="presentableId" value="LOCAL-00415" />
      <option name="project" value="LOCAL" />
      <updated>1754512486268</updated>
    </task>
    <task id="LOCAL-00416" summary="Add comprehensive error handling tests, new batch scripts for build and test execution, and extend README with updated testing documentation.">
      <option name="closed" value="true" />
      <created>1754531822323</created>
      <option name="number" value="00416" />
      <option name="presentableId" value="LOCAL-00416" />
      <option name="project" value="LOCAL" />
      <updated>1754531822323</updated>
    </task>
    <task id="LOCAL-00417" summary="Refactor `Main.java` to streamline type suffix checking by extracting a helper method, reducing nesting, and simplifying logic.">
      <option name="closed" value="true" />
      <created>1754531915210</created>
      <option name="number" value="00417" />
      <option name="presentableId" value="LOCAL-00417" />
      <option name="project" value="LOCAL" />
      <updated>1754531915210</updated>
    </task>
    <task id="LOCAL-00418" summary="Refactor `Main.java` to rename `extracted` to `convertStringToCArrayInitializer` for clarity, extract `handleEscapeSequence` for improved modularity, and enhance string literal handling in C array code generation.">
      <option name="closed" value="true" />
      <created>1754532048328</created>
      <option name="number" value="00418" />
      <option name="presentableId" value="LOCAL-00418" />
      <option name="project" value="LOCAL" />
      <updated>1754532048328</updated>
    </task>
    <task id="LOCAL-00419" summary="Refactor `Main.java` to extract `ArrayDeclaration` and `MultiDimArrayDeclaration` into separate files for improved modularity and clarity.">
      <option name="closed" value="true" />
      <created>1754532065545</created>
      <option name="number" value="00419" />
      <option name="presentableId" value="LOCAL-00419" />
      <option name="project" value="LOCAL" />
      <updated>1754532065545</updated>
    </task>
    <task id="LOCAL-00420" summary="Refactor `Main.java` to improve error handling, extract helper methods for modularity, and enhance validations for types, arrays, and string literals.">
      <option name="closed" value="true" />
      <created>1754532948561</created>
      <option name="number" value="00420" />
      <option name="presentableId" value="LOCAL-00420" />
      <option name="project" value="LOCAL" />
      <updated>1754532948561</updated>
    </task>
    <task id="LOCAL-00421" summary="Add support for multiple declarations in a single line, update `Main.java` for enhanced processing, and extend tests to validate new functionality.">
      <option name="closed" value="true" />
      <created>1754533402117</created>
      <option name="number" value="00421" />
      <option name="presentableId" value="LOCAL-00421" />
      <option name="project" value="LOCAL" />
      <updated>1754533402117</updated>
    </task>
    <task id="LOCAL-00422" summary="Add support for variable assignments in `Main.java`, update C code generation and validations, and extend tests to cover assignments.">
      <option name="closed" value="true" />
      <created>1754535666275</created>
      <option name="number" value="00422" />
      <option name="presentableId" value="LOCAL-00422" />
      <option name="project" value="LOCAL" />
      <updated>1754535666275</updated>
    </task>
    <task id="LOCAL-00423" summary="Add support for comparison operators (`==`, `!=`, `&lt;`, `&gt;`, `&lt;=`, `&gt;=`) in `Main.java`, update C code generation logic, and extend tests and README with examples.">
      <option name="closed" value="true" />
      <created>1754536402623</created>
      <option name="number" value="00423" />
      <option name="presentableId" value="LOCAL-00423" />
      <option name="project" value="LOCAL" />
      <updated>1754536402623</updated>
    </task>
    <task id="LOCAL-00424" summary="Add support for array declarations (single and multi-dimensional), string initialization in U8 arrays, and C code generation logic with modular structure across new classes (`ArrayHandler`, `CCodeGenerator`, `MagmaCompiler`, and `MagmaParser`). Extend validations and initial processing functionality.">
      <option name="closed" value="true" />
      <created>1754537718685</created>
      <option name="number" value="00424" />
      <option name="presentableId" value="LOCAL-00424" />
      <option name="project" value="LOCAL" />
      <updated>1754537718685</updated>
    </task>
    <task id="LOCAL-00425" summary="No changes to source code. Update `.idea/workspace.xml` to reflect task and commit history.">
      <option name="closed" value="true" />
      <created>1754540387808</created>
      <option name="number" value="00425" />
      <option name="presentableId" value="LOCAL-00425" />
      <option name="project" value="LOCAL" />
      <updated>1754540387808</updated>
    </task>
    <task id="LOCAL-00426" summary="Add `ParsingState` record to encapsulate parsing state flags (`insideArrayType`, `insideArrayValue`).">
      <option name="closed" value="true" />
      <created>1754540395002</created>
      <option name="number" value="00426" />
      <option name="presentableId" value="LOCAL-00426" />
      <option name="project" value="LOCAL" />
      <updated>1754540395002</updated>
    </task>
    <task id="LOCAL-00427" summary="Refactor `ArrayHandler` formatting to replace spaces with tabs for consistency across methods and improve readability.">
      <option name="closed" value="true" />
      <created>1754540432347</created>
      <option name="number" value="00427" />
      <option name="presentableId" value="LOCAL-00427" />
      <option name="project" value="LOCAL" />
      <updated>1754540432347</updated>
    </task>
    <task id="LOCAL-00428" summary="Consolidate `ArrayDeclaration` and `MultiDimArrayDeclaration` into a unified structure to handle both single and multi-dimensional arrays. Update parsing logic, validation, and C code generation accordingly. Remove `MultiDimArrayDeclaration`.">
      <option name="closed" value="true" />
      <created>1754540622575</created>
      <option name="number" value="00428" />
      <option name="presentableId" value="LOCAL-00428" />
      <option name="project" value="LOCAL" />
      <updated>1754540622575</updated>
    </task>
    <task id="LOCAL-00429" summary="Remove `StringHandler` class and refactor string declaration handling into `ArrayHandler` for improved modularity. Streamline C code generation by converting methods to return strings instead of using `StringBuilder`.">
      <option name="closed" value="true" />
      <created>1754542043101</created>
      <option name="number" value="00429" />
      <option name="presentableId" value="LOCAL-00429" />
      <option name="project" value="LOCAL" />
      <updated>1754542043101</updated>
    </task>
    <task id="LOCAL-00430" summary="Add `validateTypeCompatibility` to enforce type validation during variable processing. Update `VariableHandler` to incorporate this validation and avoid incompatible assignments (e.g., boolean to numeric types). Extend `ErrorHandlingTest` with `testInvalidTypeAssignment` to verify mismatches trigger compilation errors.">
      <option name="closed" value="true" />
      <created>1754574019551</created>
      <option name="number" value="00430" />
      <option name="presentableId" value="LOCAL-00430" />
      <option name="project" value="LOCAL" />
      <updated>1754574019551</updated>
    </task>
    <task id="LOCAL-00431" summary="Remove `typePattern` field and associated methods from `TypeMapper`. Refactor `TypeHandler`, `MagmaParser`, and `VariableHandler` to directly use inline type-matching logic, simplifying code structure and reducing redundancy.">
      <option name="closed" value="true" />
      <created>1754574595133</created>
      <option name="number" value="00431" />
      <option name="presentableId" value="LOCAL-00431" />
      <option name="project" value="LOCAL" />
      <updated>1754574595133</updated>
    </task>
    <task id="LOCAL-00432" summary="Add `WhitespaceTest` to validate compiler handling of various whitespace patterns in declarations. Enhance `TypeHandler`, `ArrayHandler`, and `VariableHandler` to support flexible whitespace parsing. Update `.idea/workspace.xml` to reflect task changes.">
      <option name="closed" value="true" />
      <created>1754575582334</created>
      <option name="number" value="00432" />
      <option name="presentableId" value="LOCAL-00432" />
      <option name="project" value="LOCAL" />
      <updated>1754575582334</updated>
    </task>
    <task id="LOCAL-00433" summary="Nuke">
      <option name="closed" value="true" />
      <created>1754577170943</created>
      <option name="number" value="00433" />
      <option name="presentableId" value="LOCAL-00433" />
      <option name="project" value="LOCAL" />
      <updated>1754577170943</updated>
    </task>
    <task id="LOCAL-00434" summary="Add initial build and test scripts, alongside a basic `Compiler` class and its unit test. Include JUnit dependencies.">
      <option name="closed" value="true" />
      <created>1754577537609</created>
      <option name="number" value="00434" />
      <option name="presentableId" value="LOCAL-00434" />
      <option name="project" value="LOCAL" />
      <updated>1754577537609</updated>
    </task>
    <task id="LOCAL-00435" summary="Delete">
      <option name="closed" value="true" />
      <created>1754577550197</created>
      <option name="number" value="00435" />
      <option name="presentableId" value="LOCAL-00435" />
      <option name="project" value="LOCAL" />
      <updated>1754577550197</updated>
    </task>
    <task id="LOCAL-00436" summary="Update `.gitignore` to exclude `/build/` directory. Adjust `.idea/workspace.xml` to include new `Batch.build` configuration for build tasks.">
      <option name="closed" value="true" />
      <created>1754577612173</created>
      <option name="number" value="00436" />
      <option name="presentableId" value="LOCAL-00436" />
      <option name="project" value="LOCAL" />
      <updated>1754577612173</updated>
    </task>
    <task id="LOCAL-00437" summary="Update `.gitignore` to exclude `/lib/` directory and adjust `.idea/workspace.xml` to reflect new `Batch.test` configuration changes.">
      <option name="closed" value="true" />
      <created>1754577772908</created>
      <option name="number" value="00437" />
      <option name="presentableId" value="LOCAL-00437" />
      <option name="project" value="LOCAL" />
      <updated>1754577772908</updated>
    </task>
    <option name="localTasksCounter" value="438" />
    <servers />
  </component>
  <component name="UnknownFeatures">
    <option featureType="com.intellij.fileTypeFactory" implementationName="*.ts" />
  </component>
  <component name="Vcs.Log.Tabs.Properties">
    <option name="TAB_STATES">
      <map>
        <entry key="MAIN">
          <value>
            <State />
          </value>
        </entry>
      </map>
    </option>
  </component>
  <component name="VcsManagerConfiguration">
    <option name="CHECK_CODE_CLEANUP_BEFORE_PROJECT_COMMIT_PROFILE" value="Project Default" />
    <MESSAGE value="Add comprehensive error handling tests, new batch scripts for build and test execution, and extend README with updated testing documentation." />
    <MESSAGE value="Refactor `Main.java` to streamline type suffix checking by extracting a helper method, reducing nesting, and simplifying logic." />
    <MESSAGE value="Refactor `Main.java` to rename `extracted` to `convertStringToCArrayInitializer` for clarity, extract `handleEscapeSequence` for improved modularity, and enhance string literal handling in C array code generation." />
    <MESSAGE value="Refactor `Main.java` to extract `ArrayDeclaration` and `MultiDimArrayDeclaration` into separate files for improved modularity and clarity." />
    <MESSAGE value="Refactor `Main.java` to improve error handling, extract helper methods for modularity, and enhance validations for types, arrays, and string literals." />
    <MESSAGE value="Add support for multiple declarations in a single line, update `Main.java` for enhanced processing, and extend tests to validate new functionality." />
    <MESSAGE value="Refactor semicolon handling logic in `Main.java` to improve readability and efficiency, and simplify array value state tracking." />
    <MESSAGE value="Add support for variable assignments in `Main.java`, update C code generation and validations, and extend tests to cover assignments." />
    <MESSAGE value="Add support for comparison operators (`==`, `!=`, `&lt;`, `&gt;`, `&lt;=`, `&gt;=`) in `Main.java`, update C code generation logic, and extend tests and README with examples." />
    <MESSAGE value="Add `ArrayHandler`, `CCodeGenerator`, `MagmaCompiler`, and `MagmaParser` classes to implement Magma-to-C compilation logic, including support for single/multi-dimensional arrays, string literals, and basic validations." />
    <MESSAGE value="Add support for array declarations (single and multi-dimensional), string initialization in U8 arrays, and C code generation logic with modular structure across new classes (`ArrayHandler`, `CCodeGenerator`, `MagmaCompiler`, and `MagmaParser`). Extend validations and initial processing functionality." />
    <MESSAGE value="No changes to source code. Update `.idea/workspace.xml` to reflect task and commit history." />
    <MESSAGE value="Add `ParsingState` record to encapsulate parsing state flags (`insideArrayType`, `insideArrayValue`)." />
    <MESSAGE value="Refactor `ArrayHandler` formatting to replace spaces with tabs for consistency across methods and improve readability." />
    <MESSAGE value="Consolidate `ArrayDeclaration` and `MultiDimArrayDeclaration` into a unified structure to handle both single and multi-dimensional arrays. Update parsing logic, validation, and C code generation accordingly. Remove `MultiDimArrayDeclaration`." />
    <MESSAGE value="Refactor tests to use `TestUtil.assertCompiles` for improved readability and maintainability. Remove redundant `Act` steps and streamline validation in all test cases." />
    <MESSAGE value="Remove `StringHandler` class and refactor string declaration handling into `ArrayHandler` for improved modularity. Streamline C code generation by converting methods to return strings instead of using `StringBuilder`." />
    <MESSAGE value="Add `validateTypeCompatibility` to enforce type validation during variable processing. Update `VariableHandler` to incorporate this validation and avoid incompatible assignments (e.g., boolean to numeric types). Extend `ErrorHandlingTest` with `testInvalidTypeAssignment` to verify mismatches trigger compilation errors." />
    <MESSAGE value="Remove `typePattern` field and associated methods from `TypeMapper`. Refactor `TypeHandler`, `MagmaParser`, and `VariableHandler` to directly use inline type-matching logic, simplifying code structure and reducing redundancy." />
    <MESSAGE value="Add `WhitespaceTest` to validate compiler handling of various whitespace patterns in declarations. Enhance `TypeHandler`, `ArrayHandler`, and `VariableHandler` to support flexible whitespace parsing. Update `.idea/workspace.xml` to reflect task changes." />
    <MESSAGE value="Nuke" />
    <MESSAGE value="Add initial build and test scripts, alongside a basic `Compiler` class and its unit test. Include JUnit dependencies." />
    <MESSAGE value="Delete" />
    <MESSAGE value="Update `.gitignore` to exclude `/build/` directory. Adjust `.idea/workspace.xml` to include new `Batch.build` configuration for build tasks." />
    <MESSAGE value="Update `.gitignore` to exclude `/lib/` directory and adjust `.idea/workspace.xml` to reflect new `Batch.test` configuration changes." />
    <option name="LAST_COMMIT_MESSAGE" value="Update `.gitignore` to exclude `/lib/` directory and adjust `.idea/workspace.xml` to reflect new `Batch.test` configuration changes." />
  </component>
  <component name="XDebuggerManager">
    <breakpoint-manager>
      <breakpoints>
        <line-breakpoint enabled="true" type="java-method">
          <url>jar://$USER_HOME$/.jdks/openjdk-24.0.1/lib/src.zip!/java.base/java/lang/OutOfMemoryError.java</url>
          <line>46</line>
          <properties class="java.lang.OutOfMemoryError" method="&lt;init&gt;">
            <option name="EMULATED" value="true" />
            <option name="WATCH_EXIT" value="false" />
          </properties>
          <option name="timeStamp" value="22" />
        </line-breakpoint>
        <line-breakpoint enabled="true" type="java-method">
          <url>jar://$USER_HOME$/.jdks/openjdk-24.0.1/lib/src.zip!/java.base/java/lang/OutOfMemoryError.java</url>
          <line>56</line>
          <properties class="java.lang.OutOfMemoryError" method="&lt;init&gt;">
            <option name="EMULATED" value="true" />
            <option name="WATCH_EXIT" value="false" />
          </properties>
          <option name="timeStamp" value="24" />
        </line-breakpoint>
      </breakpoints>
    </breakpoint-manager>
    <pin-to-top-manager>
      <pinned-members>
        <PinnedItemInfo parentTag="java.util.HashMap$Node" memberName="key" />
        <PinnedItemInfo parentTag="magma.compile.MapNode" memberName="maybeType" />
        <PinnedItemInfo parentTag="java.util.HashMap$Node" memberName="value" />
        <PinnedItemInfo parentTag="jvm.collect.map.JavaMap" memberName="map" />
        <PinnedItemInfo parentTag="magma.option.Tuple" memberName="right" />
        <PinnedItemInfo parentTag="magma.Main$Maps$JavaMap" memberName="internalMap" />
        <PinnedItemInfo parentTag="magma.Main$StructType" memberName="properties" />
      </pinned-members>
    </pin-to-top-manager>
  </component>
</project>
<?xml version="1.0"?>
<!DOCTYPE module PUBLIC "-//Checkstyle//DTD Checkstyle Configuration 1.3//EN" "https://checkstyle.org/dtds/configuration_1_3.dtd">
<module name="Checker">
	<!-- Flag usages of the `null` literal and recommend using a sealed Option<T> (Some/None) -->
	<module name="TreeWalker">
		<module name="RegexpSinglelineJava">
			<!-- match whole-word null -->
			<property name="format" value="\bnull\b" />
			<property name="message"
				value="Avoid the 'null' literal; prefer using a sealed interface Option&lt;T&gt; with Some and None variants." />
			<property name="ignoreComments" value="true" />
			<property name="severity" value="warning" />
		</module>

		<module name="RegexpSinglelineJava">
			<!-- match whole-word throw -->
			<property name="format" value="\bthrow\b" />
			<property name="message"
				value="Avoid using 'throw' statements; prefer returning a sealed Result&lt;T, E&gt; with Ok and Err variants." />
			<property name="ignoreComments" value="true" />
			<property name="severity" value="warning" />
		</module>

		<module name="RegexpSinglelineJava">
			<!-- match whole-word throws (in signatures) -->
			<property name="format" value="\bthrows\b" />
			<property name="message"
				value="Avoid declaring 'throws' on methods; prefer returning a sealed Result&lt;T, E&gt; with Ok and Err variants." />
			<property name="ignoreComments" value="true" />
			<property name="severity" value="warning" />
		</module>

		<!-- Flag explicit casts like (Type)expr using a regex to avoid catching other parentheses usage -->
		<module name="RegexpSinglelineJava">
			<!-- match typical explicit cast patterns: (Type)variable or (Type)methodCall -->
			<property name="format" value="\([A-Za-z0-9_.$&lt;&gt;\[\]]+\)\s*[A-Za-z0-9_\(]" />
			<property name="message"
				value="Avoid explicit casts; prefer pattern matching (instanceof) or using inheritance/composition." />
			<property name="ignoreComments" value="true" />
			<property name="severity" value="warning" />
		</module>
	</module>
</module>
intrinsic fn print<T>(value : T) : Void;

fn describe(message : *[U8], action : () => Void) => {
	print(message);
	action();
}

fn it(message : *[U8], action : () => Bool) => {
	print("\tIt ");
	print(message);
	print(": ");
	print(if (action()) "PASS" else "FAIL");
}

object Assert {
	fn equals(expected : I32, actual : I32) : Bool => {
		if (expected == actual) {
			return true;
		} else {
			print("Expected `");
			print(expected);
			print("`, but was actually `");
			print(actual);
			print("`.");
			return false;
		}
	}
}

describe("A sample test suite", () => {
	it("should pass!", () => {
		Assert.equals(5, 5)
	})
});
// Generated transpiled C++ from 'src\main\java\magma\compile\rule\NodeListRule.java'. This file shouldn't be edited, and rather the compiler implementation should be changed.
struct NodeListRule {/*???*/ key;/*???*/ rule;/*???*/ divider;};
/*???*/ Statements_NodeListRule(/*???*/ key, /*???*/ rule) {
	return new_???(key, rule, new_???(new_???(new_???())));
}
/*???*/ Delimited_NodeListRule(/*???*/ key, /*???*/ rule, /*???*/ delimiter) {
	return new_???(key, rule, new_???(delimiter));
}
/*???*/ Expressions_NodeListRule(/*???*/ key, /*???*/ rule) {
	return new_???(key, rule, new_???(new_???(new_???())));
}
Result<> lex_NodeListRule(/*???*/ input) {
	return divider.divide(input).reduce(new_???(new_???()), /*???*/).mapValue(/*???*/.withNodeList(key, list)).mapErr(/*???*/);
}
Result<> fold_NodeListRule(Result<> current, /*???*/ element) {
	return /*???*/;
}
Result<> generate_NodeListRule(/*???*/ value) {
	Option<> resultOption=value.findNodeList(key).map(/*???*/);
	return /*???*/;
}
Result<> generateList_NodeListRule(List<> list) {
	if (list.isEmpty())return new_???("");
	/*???*/ sb=new_???(divider.delimiter());
	/*???*/ i=/*???*/;
	while (/*???*/)
	{
	/*???*/ child=list.getOrNull(i);/*???*/
	i++;}
	return new_???(sb.toString());
}
